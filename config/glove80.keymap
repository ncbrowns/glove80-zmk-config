# 1 "glove80.keymap"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "glove80.keymap"
# 15 "glove80.keymap"
#include <behaviors.dtsi>

#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
# 66 "glove80.keymap"
/ {
    behaviors {


        lower: lower {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 30>, <&to 30>;
        };
    };
};

/ {
    macros {
        rgb_ug_status_macro: rgb_ug_status_macro {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };
    };
};


/ {
# 160 "glove80.keymap"
    macros {
        bt_0: bt_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };
        bt_1: bt_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };
        bt_2: bt_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };
        bt_3: bt_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };

};

/ {
    behaviors {
        magic: magic {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };
};
# 293 "glove80.keymap"
/ {
# 1227 "glove80.keymap"
combos {
    compatible = "zmk,combos";
# 1238 "glove80.keymap"
    combo_gaming_layer_toggle {
        timeout-ms = <50>;
        key-positions = <54 71>;
        bindings = <&tog 28>;
        layers = <0 28>;
    };


    combo_alt_tab_switcher {
        timeout-ms = <50>;
        key-positions = <69 52>;
        bindings = <&mod_tab_chord LALT 20>;
        layers = <0 1 2 3 4 5 6 7 8>;
    };

};

behaviors {
# 1859 "glove80.keymap"
    left_pinky: homey_left_pinky {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_pinky_bilateral: homey_left_pinky_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&left_pinky_hold>, <&kp>;
    };
    left_pinky_hold: homey_left_pinky_hold {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_param_1to1>
            , <&macro_press &kp MACRO_PLACEHOLDER>

            , <&macro_press &mo 10>

            , <&macro_pause_for_release>
            , <&macro_param_1to1>
            , <&macro_release &kp MACRO_PLACEHOLDER>

            , <&macro_release &mo 10>

            ;
    };
    left_pinky_tap: homey_left_pinky_tap {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_release
                &kp LSFT &kp RSFT
                &kp LALT &kp RALT
                &kp LCTL &kp RCTL
                &kp LGUI &kp RGUI>
            , <&macro_tap &kp C>
            , <&macro_param_1to1>
            , <&macro_tap &kp MACRO_PLACEHOLDER>
            ;
    };
# 1945 "glove80.keymap"
    right_pinky: homey_right_pinky {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_pinky_bilateral: homey_right_pinky_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&right_pinky_hold>, <&kp>;
    };
    right_pinky_hold: homey_right_pinky_hold {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_param_1to1>
            , <&macro_press &kp MACRO_PLACEHOLDER>

            , <&macro_press &mo 15>

            , <&macro_pause_for_release>
            , <&macro_param_1to1>
            , <&macro_release &kp MACRO_PLACEHOLDER>

            , <&macro_release &mo 15>

            ;
    };
    right_pinky_tap: homey_right_pinky_tap {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_release
                &kp LSFT &kp RSFT
                &kp LALT &kp RALT
                &kp LCTL &kp RCTL
                &kp LGUI &kp RGUI>
            , <&macro_tap &kp N>
            , <&macro_param_1to1>
            , <&macro_tap &kp MACRO_PLACEHOLDER>
            ;
    };
# 2031 "glove80.keymap"
    left_ring1: homey_left_ring1 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_ring1_bilateral: homey_left_ring1_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&left_ring1_hold>, <&kp>;
    };
    left_ring1_hold: homey_left_ring1_hold {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_param_1to1>
            , <&macro_press &kp MACRO_PLACEHOLDER>

            , <&macro_press &mo 11>

            , <&macro_pause_for_release>
            , <&macro_param_1to1>
            , <&macro_release &kp MACRO_PLACEHOLDER>

            , <&macro_release &mo 11>

            ;
    };
    left_ring1_tap: homey_left_ring1_tap {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_release
                &kp LSFT &kp RSFT
                &kp LALT &kp RALT
                &kp LCTL &kp RCTL
                &kp LGUI &kp RGUI>
            , <&macro_tap &kp I>
            , <&macro_param_1to1>
            , <&macro_tap &kp MACRO_PLACEHOLDER>
            ;
    };
# 2117 "glove80.keymap"
    right_ring1: homey_right_ring1 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_ring1_bilateral: homey_right_ring1_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&right_ring1_hold>, <&kp>;
    };
    right_ring1_hold: homey_right_ring1_hold {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_param_1to1>
            , <&macro_press &kp MACRO_PLACEHOLDER>

            , <&macro_press &mo 16>

            , <&macro_pause_for_release>
            , <&macro_param_1to1>
            , <&macro_release &kp MACRO_PLACEHOLDER>

            , <&macro_release &mo 16>

            ;
    };
    right_ring1_tap: homey_right_ring1_tap {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_release
                &kp LSFT &kp RSFT
                &kp LALT &kp RALT
                &kp LCTL &kp RCTL
                &kp LGUI &kp RGUI>
            , <&macro_tap &kp S>
            , <&macro_param_1to1>
            , <&macro_tap &kp MACRO_PLACEHOLDER>
            ;
    };
# 2203 "glove80.keymap"
    left_ring2: homey_left_ring2 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_ring2_bilateral: homey_left_ring2_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&left_ring2_hold>, <&kp>;
    };
    left_ring2_hold: homey_left_ring2_hold {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_param_1to1>
            , <&macro_press &kp MACRO_PLACEHOLDER>

            , <&macro_press &mo 12>

            , <&macro_pause_for_release>
            , <&macro_param_1to1>
            , <&macro_release &kp MACRO_PLACEHOLDER>

            , <&macro_release &mo 12>

            ;
    };
    left_ring2_tap: homey_left_ring2_tap {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_release
                &kp LSFT &kp RSFT
                &kp LALT &kp RALT
                &kp LCTL &kp RCTL
                &kp LGUI &kp RGUI>
            , <&macro_tap &kp Y>
            , <&macro_param_1to1>
            , <&macro_tap &kp MACRO_PLACEHOLDER>
            ;
    };
# 2289 "glove80.keymap"
    right_ring2: homey_right_ring2 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_ring2_bilateral: homey_right_ring2_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&right_ring2_hold>, <&kp>;
    };
    right_ring2_hold: homey_right_ring2_hold {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_param_1to1>
            , <&macro_press &kp MACRO_PLACEHOLDER>

            , <&macro_press &mo 17>

            , <&macro_pause_for_release>
            , <&macro_param_1to1>
            , <&macro_release &kp MACRO_PLACEHOLDER>

            , <&macro_release &mo 17>

            ;
    };
    right_ring2_tap: homey_right_ring2_tap {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_release
                &kp LSFT &kp RSFT
                &kp LALT &kp RALT
                &kp LCTL &kp RCTL
                &kp LGUI &kp RGUI>
            , <&macro_tap &kp W>
            , <&macro_param_1to1>
            , <&macro_tap &kp MACRO_PLACEHOLDER>
            ;
    };
# 2375 "glove80.keymap"
    left_middy: homey_left_middy {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_middy_bilateral: homey_left_middy_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&left_middy_hold>, <&kp>;
    };
    left_middy_hold: homey_left_middy_hold {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_param_1to1>
            , <&macro_press &kp MACRO_PLACEHOLDER>

            , <&macro_press &mo 13>

            , <&macro_pause_for_release>
            , <&macro_param_1to1>
            , <&macro_release &kp MACRO_PLACEHOLDER>

            , <&macro_release &mo 13>

            ;
    };
    left_middy_tap: homey_left_middy_tap {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_release
                &kp LSFT &kp RSFT
                &kp LALT &kp RALT
                &kp LCTL &kp RCTL
                &kp LGUI &kp RGUI>
            , <&macro_tap &kp E>
            , <&macro_param_1to1>
            , <&macro_tap &kp MACRO_PLACEHOLDER>
            ;
    };
# 2461 "glove80.keymap"
    right_middy: homey_right_middy {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_middy_bilateral: homey_right_middy_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&right_middy_hold>, <&kp>;
    };
    right_middy_hold: homey_right_middy_hold {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_param_1to1>
            , <&macro_press &kp MACRO_PLACEHOLDER>

            , <&macro_press &mo 18>

            , <&macro_pause_for_release>
            , <&macro_param_1to1>
            , <&macro_release &kp MACRO_PLACEHOLDER>

            , <&macro_release &mo 18>

            ;
    };
    right_middy_tap: homey_right_middy_tap {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_release
                &kp LSFT &kp RSFT
                &kp LALT &kp RALT
                &kp LCTL &kp RCTL
                &kp LGUI &kp RGUI>
            , <&macro_tap &kp T>
            , <&macro_param_1to1>
            , <&macro_tap &kp MACRO_PLACEHOLDER>
            ;
    };
# 2547 "glove80.keymap"
    left_index: homey_left_index {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_index_bilateral: homey_left_index_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&left_index_hold>, <&kp>;
    };
    left_index_hold: homey_left_index_hold {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_param_1to1>
            , <&macro_press &kp MACRO_PLACEHOLDER>

            , <&macro_press &mo 14>

            , <&macro_pause_for_release>
            , <&macro_param_1to1>
            , <&macro_release &kp MACRO_PLACEHOLDER>

            , <&macro_release &mo 14>

            ;
    };
    left_index_tap: homey_left_index_tap {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_release
                &kp LSFT &kp RSFT
                &kp LALT &kp RALT
                &kp LCTL &kp RCTL
                &kp LGUI &kp RGUI>
            , <&macro_tap &kp A>
            , <&macro_param_1to1>
            , <&macro_tap &kp MACRO_PLACEHOLDER>
            ;
    };
# 2633 "glove80.keymap"
    right_index: homey_right_index {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_index_bilateral: homey_right_index_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&right_index_hold>, <&kp>;
    };
    right_index_hold: homey_right_index_hold {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_param_1to1>
            , <&macro_press &kp MACRO_PLACEHOLDER>

            , <&macro_press &mo 19>

            , <&macro_pause_for_release>
            , <&macro_param_1to1>
            , <&macro_release &kp MACRO_PLACEHOLDER>

            , <&macro_release &mo 19>

            ;
    };
    right_index_tap: homey_right_index_tap {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_release
                &kp LSFT &kp RSFT
                &kp LALT &kp RALT
                &kp LCTL &kp RCTL
                &kp LGUI &kp RGUI>
            , <&macro_tap &kp H>
            , <&macro_param_1to1>
            , <&macro_tap &kp MACRO_PLACEHOLDER>
            ;
    };
# 2719 "glove80.keymap"
    left_ring1_pinky: homey_left_ring1_pinky {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_ring1_pinky_bilateral: homey_left_ring1_pinky_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_ring1_tap>;
    };
# 2754 "glove80.keymap"
    left_ring2_pinky: homey_left_ring2_pinky {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_ring2_pinky_bilateral: homey_left_ring2_pinky_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_ring2_tap>;
    };
# 2789 "glove80.keymap"
    left_middy_pinky: homey_left_middy_pinky {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_middy_pinky_bilateral: homey_left_middy_pinky_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_middy_tap>;
    };
# 2824 "glove80.keymap"
    left_index_pinky: homey_left_index_pinky {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_index_pinky_bilateral: homey_left_index_pinky_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_index_tap>;
    };
# 2859 "glove80.keymap"
    right_ring1_pinky: homey_right_ring1_pinky {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_ring1_pinky_bilateral: homey_right_ring1_pinky_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_ring1_tap>;
    };
# 2894 "glove80.keymap"
    right_ring2_pinky: homey_right_ring2_pinky {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_ring2_pinky_bilateral: homey_right_ring2_pinky_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_ring2_tap>;
    };
# 2929 "glove80.keymap"
    right_middy_pinky: homey_right_middy_pinky {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_middy_pinky_bilateral: homey_right_middy_pinky_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_middy_tap>;
    };
# 2964 "glove80.keymap"
    right_index_pinky: homey_right_index_pinky {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_index_pinky_bilateral: homey_right_index_pinky_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_index_tap>;
    };
# 2999 "glove80.keymap"
    left_pinky_ring1: homey_left_pinky_ring1 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_pinky_ring1_bilateral: homey_left_pinky_ring1_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_pinky_tap>;
    };
# 3034 "glove80.keymap"
    left_ring2_ring1: homey_left_ring2_ring1 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_ring2_ring1_bilateral: homey_left_ring2_ring1_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_ring2_tap>;
    };
# 3069 "glove80.keymap"
    left_middy_ring1: homey_left_middy_ring1 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_middy_ring1_bilateral: homey_left_middy_ring1_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_middy_tap>;
    };
# 3104 "glove80.keymap"
    left_index_ring1: homey_left_index_ring1 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_index_ring1_bilateral: homey_left_index_ring1_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_index_tap>;
    };
# 3139 "glove80.keymap"
    right_pinky_ring1: homey_right_pinky_ring1 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_pinky_ring1_bilateral: homey_right_pinky_ring1_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_pinky_tap>;
    };
# 3174 "glove80.keymap"
    right_ring2_ring1: homey_right_ring2_ring1 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_ring2_ring1_bilateral: homey_right_ring2_ring1_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_ring2_tap>;
    };
# 3209 "glove80.keymap"
    right_middy_ring1: homey_right_middy_ring1 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_middy_ring1_bilateral: homey_right_middy_ring1_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_middy_tap>;
    };
# 3244 "glove80.keymap"
    right_index_ring1: homey_right_index_ring1 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_index_ring1_bilateral: homey_right_index_ring1_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_index_tap>;
    };
# 3279 "glove80.keymap"
    left_pinky_ring2: homey_left_pinky_ring2 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_pinky_ring2_bilateral: homey_left_pinky_ring2_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_pinky_tap>;
    };
# 3314 "glove80.keymap"
    left_ring1_ring2: homey_left_ring1_ring2 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_ring1_ring2_bilateral: homey_left_ring1_ring2_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_ring1_tap>;
    };
# 3349 "glove80.keymap"
    left_middy_ring2: homey_left_middy_ring2 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_middy_ring2_bilateral: homey_left_middy_ring2_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_middy_tap>;
    };
# 3384 "glove80.keymap"
    left_index_ring2: homey_left_index_ring2 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_index_ring2_bilateral: homey_left_index_ring2_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_index_tap>;
    };
# 3419 "glove80.keymap"
    right_pinky_ring2: homey_right_pinky_ring2 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_pinky_ring2_bilateral: homey_right_pinky_ring2_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_pinky_tap>;
    };
# 3454 "glove80.keymap"
    right_ring1_ring2: homey_right_ring1_ring2 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_ring1_ring2_bilateral: homey_right_ring1_ring2_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_ring1_tap>;
    };
# 3489 "glove80.keymap"
    right_middy_ring2: homey_right_middy_ring2 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_middy_ring2_bilateral: homey_right_middy_ring2_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_middy_tap>;
    };
# 3524 "glove80.keymap"
    right_index_ring2: homey_right_index_ring2 {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_index_ring2_bilateral: homey_right_index_ring2_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_index_tap>;
    };
# 3559 "glove80.keymap"
    left_pinky_middy: homey_left_pinky_middy {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_pinky_middy_bilateral: homey_left_pinky_middy_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_pinky_tap>;
    };
# 3594 "glove80.keymap"
    left_ring1_middy: homey_left_ring1_middy {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_ring1_middy_bilateral: homey_left_ring1_middy_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_ring1_tap>;
    };
# 3629 "glove80.keymap"
    left_ring2_middy: homey_left_ring2_middy {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_ring2_middy_bilateral: homey_left_ring2_middy_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_ring2_tap>;
    };
# 3664 "glove80.keymap"
    left_index_middy: homey_left_index_middy {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_index_middy_bilateral: homey_left_index_middy_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_index_tap>;
    };
# 3699 "glove80.keymap"
    right_pinky_middy: homey_right_pinky_middy {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_pinky_middy_bilateral: homey_right_pinky_middy_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_pinky_tap>;
    };
# 3734 "glove80.keymap"
    right_ring1_middy: homey_right_ring1_middy {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_ring1_middy_bilateral: homey_right_ring1_middy_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_ring1_tap>;
    };
# 3769 "glove80.keymap"
    right_ring2_middy: homey_right_ring2_middy {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_ring2_middy_bilateral: homey_right_ring2_middy_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_ring2_tap>;
    };
# 3804 "glove80.keymap"
    right_index_middy: homey_right_index_middy {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_index_middy_bilateral: homey_right_index_middy_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <180>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <100>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_index_tap>;
    };
# 3839 "glove80.keymap"
    left_pinky_index: homey_left_pinky_index {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_pinky_index_bilateral: homey_left_pinky_index_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_pinky_tap>;
    };
# 3874 "glove80.keymap"
    left_ring1_index: homey_left_ring1_index {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_ring1_index_bilateral: homey_left_ring1_index_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_ring1_tap>;
    };
# 3909 "glove80.keymap"
    left_ring2_index: homey_left_ring2_index {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_ring2_index_bilateral: homey_left_ring2_index_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_ring2_tap>;
    };
# 3944 "glove80.keymap"
    left_middy_index: homey_left_middy_index {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    left_middy_index_bilateral: homey_left_middy_index_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 75 76 77 78 79 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&left_middy_tap>;
    };
# 3979 "glove80.keymap"
    right_pinky_index: homey_right_pinky_index {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_pinky_index_bilateral: homey_right_pinky_index_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_pinky_tap>;
    };
# 4014 "glove80.keymap"
    right_ring1_index: homey_right_ring1_index {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_ring1_index_bilateral: homey_right_ring1_index_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_ring1_tap>;
    };
# 4049 "glove80.keymap"
    right_ring2_index: homey_right_ring2_index {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_ring2_index_bilateral: homey_right_ring2_index_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_ring2_tap>;
    };
# 4084 "glove80.keymap"
    right_middy_index: homey_right_middy_index {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };
    right_middy_index_bilateral: homey_right_middy_index_bilateral {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 64 65 66 67 68 69 52 57 74 70 53 56 73 71 54 55 72>;
        hold-trigger-on-release;
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&kp>, <&right_middy_tap>;
    };





    plain: plain_typing_layer {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&mo>, <&kp>;
        retro-tap;
    };
    plain_engram_COMMA: plain_typing_layer_engram_COMMA {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&mo>, <&engram_COMMA>;
        retro-tap;
    };
    plain_engram_DOT: plain_typing_layer_engram_DOT {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        tapping-term-ms = <240>;
        quick-tap-ms = <300>;
        require-prior-idle-ms = <160>;
        #binding-cells = <2>;
        bindings = <&mo>, <&engram_DOT>;
        retro-tap;
    };




    thumb: thumb_layer_access {
        compatible = "zmk,behavior-hold-tap";
        flavor = "balanced";
        tapping-term-ms = <200>;
        quick-tap-ms = <300>;
        #binding-cells = <2>;
        bindings = <&mo>, <&kp>;
    };
    thumb_parang_left: thumb_layer_access_parang_left {
        compatible = "zmk,behavior-hold-tap";
        flavor = "balanced";
        tapping-term-ms = <200>;
        quick-tap-ms = <300>;
        #binding-cells = <2>;
        bindings = <&mo>, <&parang_left>;
    };
    thumb_lower_shift: lower_layer_or_sticky_shift {
        compatible = "zmk,behavior-hold-tap";
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        #binding-cells = <2>;
        bindings = <&mo>, <&sticky_key_oneshot>;
    };
    space: thumb_layer_access_spacebar {
        compatible = "zmk,behavior-hold-tap";
        flavor = "balanced";
        tapping-term-ms = <200>;
        quick-tap-ms = <150>;
        #binding-cells = <2>;
        bindings = <&mo>, <&kp>;
    };




    parang_left: left_parenthesis_and_less_than {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp LS(N9)>, <&kp LS(COMMA)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };




    parang_right: right_parenthesis_and_greater_than {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp LS(N0)>, <&kp LS(DOT)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };






    engram_N1: engram_shift_N1_PIPE {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N1>, <&kp LS(BSLH)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_N2: engram_shift_N2_EQUAL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N2>, <&kp EQUAL>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_N3: engram_shift_N3_TILDE {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N3>, <&kp LS(GRAVE)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_N4: engram_shift_N4_PLUS {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N4>, <&kp LS(EQUAL)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_N5: engram_shift_N5_LT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N5>, <&kp LS(COMMA)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_N6: engram_shift_N6_GT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N6>, <&kp LS(DOT)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_N7: engram_shift_N7_CARET {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N7>, <&kp LS(N6)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_N8: engram_shift_N8_AMPS {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N8>, <&kp LS(N7)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_N9: engram_shift_N9_PRCNT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N9>, <&kp LS(N5)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_N0: engram_shift_N0_STAR {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N0>, <&kp LS(N8)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_SQT: engram_shift_SQT_LPAR {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp SQT>, <&kp LS(N9)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_DQT: engram_shift_DQT_RPAR {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp LS(SQT)>, <&kp LS(N0)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_COMMA: engram_shift_COMMA_SEMI {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp COMMA>, <&kp SEMI>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_DOT: engram_shift_DOT_COLON {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp DOT>, <&kp LS(SEMI)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_QMARK: engram_shift_QMARK_EXCL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp LS(FSLH)>, <&kp LS(N1)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_HASH: engram_shift_HASH_DLLR {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp LS(N3)>, <&kp LS(N4)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_AT: engram_shift_AT_GRAVE {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp LS(N2)>, <&kp GRAVE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    engram_FSLH: engram_shift_FSLH_BSLH {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp FSLH>, <&kp BSLH>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
# 4325 "glove80.keymap"
    sticky_key_oneshot: sticky_key_oneshot_macro {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_param_1to1>
            , <&macro_tap &sticky_key_quickrel MACRO_PLACEHOLDER>
            ;
    };
    sticky_key_quickrel: sticky_key_quick_release {
        compatible = "zmk,behavior-sticky-key";
        #binding-cells = <1>;
        bindings = <&kp>;
        release-after-ms = <500>;
        quick-release;
        ignore-modifiers;
    };
# 4355 "glove80.keymap"
    behavior_caps_word {
        continue-list = <
            UNDERSCORE MINUS
            BACKSPACE DELETE
            N1 N2 N3 N4 N5 N6 N7 N8 N9 N0
        >;
    };

};

macros {






    ZMK_MACRO(linux_magic_sysrq,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
            = <&macro_press &mo 0 &kp RALT>
            , <&macro_tap &kp PRINTSCREEN>
            , <&macro_pause_for_release>
            , <&macro_release &mo 0 &kp RALT>
            ;
    )




    mod_tab: mod_tab_switcher {
        compatible = "zmk,behavior-macro-one-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <1>;
        bindings
            = <&macro_param_1to1>
            , <&macro_press &kp MACRO_PLACEHOLDER>
            , <&macro_tap &kp TAB>
            , <&macro_pause_for_release>
            , <&macro_param_1to1>
            , <&macro_release &kp MACRO_PLACEHOLDER>
            ;
    };
    mod_tab_chord: mod_tab_switcher_chord {
        compatible = "zmk,behavior-macro-two-param";
        wait-ms = <0>;
        tap-ms = <0>;
        #binding-cells = <2>;
        bindings
            = <&macro_param_2to1>
            , <&macro_press &mo MACRO_PLACEHOLDER>
            , <&macro_param_1to1>
            , <&macro_press &mod_tab MACRO_PLACEHOLDER>
            , <&macro_pause_for_release>
            , <&macro_param_1to1>
            , <&macro_release &mod_tab MACRO_PLACEHOLDER>
            , <&macro_param_2to1>
            , <&macro_release &mo MACRO_PLACEHOLDER>
            ;
    };
# 4434 "glove80.keymap"
    ZMK_MACRO(select_none,
        wait-ms = <1>;
        tap-ms = <1>;
        bindings = <&kp DOWN &kp UP &kp RIGHT &kp LEFT>;
    )




    select_word: select_word {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&select_word_right>, <&select_word_left>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    ZMK_MACRO(select_word_right,
        wait-ms = <1>;
        tap-ms = <1>;
        bindings = <&kp LC(RIGHT) &kp LC(LEFT) &kp LC(LS(RIGHT))>;
    )
    ZMK_MACRO(select_word_left,
        wait-ms = <1>;
        tap-ms = <1>;
        bindings = <&kp LC(LEFT) &kp LC(RIGHT) &kp LC(LS(LEFT))>;
    )




    extend_word: extend_word {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&extend_word_right>, <&extend_word_left>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    ZMK_MACRO(extend_word_right,
        wait-ms = <1>;
        tap-ms = <1>;
        bindings = <&kp LC(LS(RIGHT))>;
    )
    ZMK_MACRO(extend_word_left,
        wait-ms = <1>;
        tap-ms = <1>;
        bindings = <&kp LC(LS(LEFT))>;
    )




    select_line: select_line {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&select_line_right>, <&select_line_left>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    ZMK_MACRO(select_line_right,
        wait-ms = <1>;
        tap-ms = <1>;
        bindings = <&kp HOME &kp LS(END)>;
    )
    ZMK_MACRO(select_line_left,
        wait-ms = <1>;
        tap-ms = <1>;
        bindings = <&kp END &kp LS(HOME)>;
    )




    extend_line: extend_line {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&extend_line_right>, <&extend_line_left>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    ZMK_MACRO(extend_line_right,
        wait-ms = <1>;
        tap-ms = <1>;
        bindings = <&kp LS(DOWN) &kp LS(END)>;
    )
    ZMK_MACRO(extend_line_left,
        wait-ms = <1>;
        tap-ms = <1>;
        bindings = <&kp LS(UP) &kp LS(HOME)>;
    )
# 4730 "glove80.keymap"
    ZMK_MACRO(world_degree_sign_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp O &kp O>; )
# 4754 "glove80.keymap"
    world_degree_sign: world_degree_sign {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_degree_sign_macro>, <&world_degree_sign_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_section_sign_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp S &kp O>; )
# 4790 "glove80.keymap"
    world_section_sign: world_section_sign {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_section_sign_macro>, <&world_section_sign_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_paragraph_sign_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp P &kp LS(N1)>; )
# 4826 "glove80.keymap"
    world_paragraph_sign: world_paragraph_sign {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_paragraph_sign_macro>, <&world_paragraph_sign_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_o_ordinal_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N6) &kp LS(MINUS) &kp O>; )
# 4862 "glove80.keymap"
    world_o_ordinal: world_o_ordinal {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_ordinal_macro>, <&world_o_ordinal_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_a_ordinal_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N6) &kp LS(MINUS) &kp A>; )
# 4898 "glove80.keymap"
    world_a_ordinal: world_a_ordinal {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_ordinal_macro>, <&world_a_ordinal_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_exclaim_left_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp A &kp N1 &kp ENTER>; )
# 4929 "glove80.keymap"
    world_exclaim_left: world_exclaim_left {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_exclaim_left_macro>, <&world_exclaim_left_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_question_left_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N1) &kp LS(N1)>; )
# 4965 "glove80.keymap"
    world_question_left: world_question_left {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_question_left_macro>, <&world_question_left_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_currency_crypto_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N0 &kp B &kp F &kp ENTER>; )
# 4986 "glove80.keymap"
    world_currency_crypto: world_currency_crypto {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_crypto_macro>, <&world_currency_crypto_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_currency_cent_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp A &kp N2 &kp ENTER>; )
# 5007 "glove80.keymap"
    world_currency_cent: world_currency_cent {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_cent_macro>, <&world_currency_cent_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_currency_sign_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp A &kp N4 &kp ENTER>; )
# 5028 "glove80.keymap"
    world_currency_sign: world_currency_sign {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_sign_macro>, <&world_currency_sign_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_micro_sign_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp M &kp U>; )
# 5064 "glove80.keymap"
    world_micro_sign: world_micro_sign {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_micro_sign_macro>, <&world_micro_sign_macro>;
        mods = <(~(

MOD_RALT



))>;
    };




    ZMK_MACRO(world_i_acute_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp SQT &kp I>; )
# 5104 "glove80.keymap"
    world_i_acute_lower: world_i_acute_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_acute_lower_macro>, <&world_i_acute_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_i_acute_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp SQT &kp LS(I)>; )
# 5140 "glove80.keymap"
    world_i_acute_upper: world_i_acute_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_acute_upper_macro>, <&world_i_acute_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_i_acute: world_i_acute {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_acute_lower>, <&world_i_acute_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_i_diaeresis_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(SQT) &kp I>; )
# 5182 "glove80.keymap"
    world_i_diaeresis_lower: world_i_diaeresis_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_diaeresis_lower_macro>, <&world_i_diaeresis_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_i_diaeresis_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(SQT) &kp LS(I)>; )
# 5218 "glove80.keymap"
    world_i_diaeresis_upper: world_i_diaeresis_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_diaeresis_upper_macro>, <&world_i_diaeresis_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_i_diaeresis: world_i_diaeresis {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_diaeresis_lower>, <&world_i_diaeresis_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_i_circumflex_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N6) &kp I>; )
# 5260 "glove80.keymap"
    world_i_circumflex_lower: world_i_circumflex_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_circumflex_lower_macro>, <&world_i_circumflex_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_i_circumflex_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N6) &kp LS(I)>; )
# 5296 "glove80.keymap"
    world_i_circumflex_upper: world_i_circumflex_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_circumflex_upper_macro>, <&world_i_circumflex_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_i_circumflex: world_i_circumflex {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_circumflex_lower>, <&world_i_circumflex_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_i_grave_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp GRAVE &kp I>; )
# 5338 "glove80.keymap"
    world_i_grave_lower: world_i_grave_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_grave_lower_macro>, <&world_i_grave_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_i_grave_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp GRAVE &kp LS(I)>; )
# 5374 "glove80.keymap"
    world_i_grave_upper: world_i_grave_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_grave_upper_macro>, <&world_i_grave_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_i_grave: world_i_grave {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_grave_lower>, <&world_i_grave_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_e_acute_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp SQT &kp E>; )
# 5416 "glove80.keymap"
    world_e_acute_lower: world_e_acute_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_acute_lower_macro>, <&world_e_acute_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_e_acute_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp SQT &kp LS(E)>; )
# 5452 "glove80.keymap"
    world_e_acute_upper: world_e_acute_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_acute_upper_macro>, <&world_e_acute_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_e_acute: world_e_acute {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_acute_lower>, <&world_e_acute_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_e_diaeresis_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(SQT) &kp E>; )
# 5494 "glove80.keymap"
    world_e_diaeresis_lower: world_e_diaeresis_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_diaeresis_lower_macro>, <&world_e_diaeresis_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_e_diaeresis_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(SQT) &kp LS(E)>; )
# 5530 "glove80.keymap"
    world_e_diaeresis_upper: world_e_diaeresis_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_diaeresis_upper_macro>, <&world_e_diaeresis_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_e_diaeresis: world_e_diaeresis {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_diaeresis_lower>, <&world_e_diaeresis_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_e_circumflex_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N6) &kp E>; )
# 5572 "glove80.keymap"
    world_e_circumflex_lower: world_e_circumflex_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_circumflex_lower_macro>, <&world_e_circumflex_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_e_circumflex_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N6) &kp LS(E)>; )
# 5608 "glove80.keymap"
    world_e_circumflex_upper: world_e_circumflex_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_circumflex_upper_macro>, <&world_e_circumflex_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_e_circumflex: world_e_circumflex {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_circumflex_lower>, <&world_e_circumflex_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_e_grave_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp GRAVE &kp E>; )
# 5650 "glove80.keymap"
    world_e_grave_lower: world_e_grave_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_grave_lower_macro>, <&world_e_grave_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_e_grave_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp GRAVE &kp LS(E)>; )
# 5686 "glove80.keymap"
    world_e_grave_upper: world_e_grave_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_grave_upper_macro>, <&world_e_grave_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_e_grave: world_e_grave {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_grave_lower>, <&world_e_grave_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_e_ae_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp A &kp E>; )
# 5728 "glove80.keymap"
    world_e_ae_lower: world_e_ae_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_ae_lower_macro>, <&world_e_ae_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_e_ae_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(A) &kp LS(E)>; )
# 5764 "glove80.keymap"
    world_e_ae_upper: world_e_ae_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_ae_upper_macro>, <&world_e_ae_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_e_ae: world_e_ae {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_ae_lower>, <&world_e_ae_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_a_acute_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp SQT &kp A>; )
# 5806 "glove80.keymap"
    world_a_acute_lower: world_a_acute_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_acute_lower_macro>, <&world_a_acute_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_a_acute_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp SQT &kp LS(A)>; )
# 5842 "glove80.keymap"
    world_a_acute_upper: world_a_acute_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_acute_upper_macro>, <&world_a_acute_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_a_acute: world_a_acute {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_acute_lower>, <&world_a_acute_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_a_diaeresis_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(SQT) &kp A>; )
# 5884 "glove80.keymap"
    world_a_diaeresis_lower: world_a_diaeresis_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_diaeresis_lower_macro>, <&world_a_diaeresis_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_a_diaeresis_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(SQT) &kp LS(A)>; )
# 5920 "glove80.keymap"
    world_a_diaeresis_upper: world_a_diaeresis_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_diaeresis_upper_macro>, <&world_a_diaeresis_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_a_diaeresis: world_a_diaeresis {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_diaeresis_lower>, <&world_a_diaeresis_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_a_circumflex_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N6) &kp A>; )
# 5962 "glove80.keymap"
    world_a_circumflex_lower: world_a_circumflex_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_circumflex_lower_macro>, <&world_a_circumflex_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_a_circumflex_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N6) &kp LS(A)>; )
# 5998 "glove80.keymap"
    world_a_circumflex_upper: world_a_circumflex_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_circumflex_upper_macro>, <&world_a_circumflex_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_a_circumflex: world_a_circumflex {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_circumflex_lower>, <&world_a_circumflex_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_a_grave_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp GRAVE &kp A>; )
# 6040 "glove80.keymap"
    world_a_grave_lower: world_a_grave_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_grave_lower_macro>, <&world_a_grave_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_a_grave_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp GRAVE &kp LS(A)>; )
# 6076 "glove80.keymap"
    world_a_grave_upper: world_a_grave_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_grave_upper_macro>, <&world_a_grave_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_a_grave: world_a_grave {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_grave_lower>, <&world_a_grave_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_a_tilde_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(GRAVE) &kp A>; )
# 6118 "glove80.keymap"
    world_a_tilde_lower: world_a_tilde_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_tilde_lower_macro>, <&world_a_tilde_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_a_tilde_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(GRAVE) &kp LS(A)>; )
# 6154 "glove80.keymap"
    world_a_tilde_upper: world_a_tilde_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_tilde_upper_macro>, <&world_a_tilde_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_a_tilde: world_a_tilde {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_tilde_lower>, <&world_a_tilde_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_a_ring_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp O &kp A>; )
# 6196 "glove80.keymap"
    world_a_ring_lower: world_a_ring_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_ring_lower_macro>, <&world_a_ring_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_a_ring_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp O &kp LS(A)>; )
# 6232 "glove80.keymap"
    world_a_ring_upper: world_a_ring_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_ring_upper_macro>, <&world_a_ring_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_a_ring: world_a_ring {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_ring_lower>, <&world_a_ring_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_y_acute_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp SQT &kp Y>; )
# 6274 "glove80.keymap"
    world_y_acute_lower: world_y_acute_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_y_acute_lower_macro>, <&world_y_acute_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_y_acute_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp SQT &kp LS(Y)>; )
# 6310 "glove80.keymap"
    world_y_acute_upper: world_y_acute_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_y_acute_upper_macro>, <&world_y_acute_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_y_acute: world_y_acute {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_y_acute_lower>, <&world_y_acute_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_y_diaeresis_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(SQT) &kp Y>; )
# 6352 "glove80.keymap"
    world_y_diaeresis_lower: world_y_diaeresis_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_y_diaeresis_lower_macro>, <&world_y_diaeresis_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_y_diaeresis_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(SQT) &kp LS(Y)>; )
# 6388 "glove80.keymap"
    world_y_diaeresis_upper: world_y_diaeresis_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_y_diaeresis_upper_macro>, <&world_y_diaeresis_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_y_diaeresis: world_y_diaeresis {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_y_diaeresis_lower>, <&world_y_diaeresis_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_o_acute_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp SQT &kp O>; )
# 6430 "glove80.keymap"
    world_o_acute_lower: world_o_acute_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_acute_lower_macro>, <&world_o_acute_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_o_acute_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp SQT &kp LS(O)>; )
# 6466 "glove80.keymap"
    world_o_acute_upper: world_o_acute_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_acute_upper_macro>, <&world_o_acute_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_o_acute: world_o_acute {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_acute_lower>, <&world_o_acute_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_o_diaeresis_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(SQT) &kp O>; )
# 6508 "glove80.keymap"
    world_o_diaeresis_lower: world_o_diaeresis_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_diaeresis_lower_macro>, <&world_o_diaeresis_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_o_diaeresis_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(SQT) &kp LS(O)>; )
# 6544 "glove80.keymap"
    world_o_diaeresis_upper: world_o_diaeresis_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_diaeresis_upper_macro>, <&world_o_diaeresis_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_o_diaeresis: world_o_diaeresis {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_diaeresis_lower>, <&world_o_diaeresis_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_o_circumflex_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N6) &kp O>; )
# 6586 "glove80.keymap"
    world_o_circumflex_lower: world_o_circumflex_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_circumflex_lower_macro>, <&world_o_circumflex_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_o_circumflex_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N6) &kp LS(O)>; )
# 6622 "glove80.keymap"
    world_o_circumflex_upper: world_o_circumflex_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_circumflex_upper_macro>, <&world_o_circumflex_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_o_circumflex: world_o_circumflex {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_circumflex_lower>, <&world_o_circumflex_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_o_grave_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp GRAVE &kp O>; )
# 6664 "glove80.keymap"
    world_o_grave_lower: world_o_grave_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_grave_lower_macro>, <&world_o_grave_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_o_grave_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp GRAVE &kp LS(O)>; )
# 6700 "glove80.keymap"
    world_o_grave_upper: world_o_grave_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_grave_upper_macro>, <&world_o_grave_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_o_grave: world_o_grave {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_grave_lower>, <&world_o_grave_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_o_tilde_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(GRAVE) &kp O>; )
# 6742 "glove80.keymap"
    world_o_tilde_lower: world_o_tilde_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_tilde_lower_macro>, <&world_o_tilde_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_o_tilde_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(GRAVE) &kp LS(O)>; )
# 6778 "glove80.keymap"
    world_o_tilde_upper: world_o_tilde_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_tilde_upper_macro>, <&world_o_tilde_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_o_tilde: world_o_tilde {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_tilde_lower>, <&world_o_tilde_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_o_slash_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp FSLH &kp O>; )
# 6820 "glove80.keymap"
    world_o_slash_lower: world_o_slash_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_slash_lower_macro>, <&world_o_slash_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_o_slash_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp FSLH &kp LS(O)>; )
# 6856 "glove80.keymap"
    world_o_slash_upper: world_o_slash_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_slash_upper_macro>, <&world_o_slash_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_o_slash: world_o_slash {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_slash_lower>, <&world_o_slash_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_u_acute_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp SQT &kp U>; )
# 6898 "glove80.keymap"
    world_u_acute_lower: world_u_acute_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_acute_lower_macro>, <&world_u_acute_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_u_acute_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp SQT &kp LS(U)>; )
# 6934 "glove80.keymap"
    world_u_acute_upper: world_u_acute_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_acute_upper_macro>, <&world_u_acute_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_u_acute: world_u_acute {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_acute_lower>, <&world_u_acute_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_u_diaeresis_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(SQT) &kp U>; )
# 6976 "glove80.keymap"
    world_u_diaeresis_lower: world_u_diaeresis_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_diaeresis_lower_macro>, <&world_u_diaeresis_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_u_diaeresis_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(SQT) &kp LS(U)>; )
# 7012 "glove80.keymap"
    world_u_diaeresis_upper: world_u_diaeresis_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_diaeresis_upper_macro>, <&world_u_diaeresis_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_u_diaeresis: world_u_diaeresis {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_diaeresis_lower>, <&world_u_diaeresis_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_u_circumflex_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N6) &kp U>; )
# 7054 "glove80.keymap"
    world_u_circumflex_lower: world_u_circumflex_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_circumflex_lower_macro>, <&world_u_circumflex_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_u_circumflex_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(N6) &kp LS(U)>; )
# 7090 "glove80.keymap"
    world_u_circumflex_upper: world_u_circumflex_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_circumflex_upper_macro>, <&world_u_circumflex_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_u_circumflex: world_u_circumflex {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_circumflex_lower>, <&world_u_circumflex_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_u_grave_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp GRAVE &kp U>; )
# 7132 "glove80.keymap"
    world_u_grave_lower: world_u_grave_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_grave_lower_macro>, <&world_u_grave_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_u_grave_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp GRAVE &kp LS(U)>; )
# 7168 "glove80.keymap"
    world_u_grave_upper: world_u_grave_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_grave_upper_macro>, <&world_u_grave_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_u_grave: world_u_grave {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_grave_lower>, <&world_u_grave_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_consonants_cedilla_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp COMMA &kp C>; )
# 7210 "glove80.keymap"
    world_consonants_cedilla_lower: world_consonants_cedilla_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_consonants_cedilla_lower_macro>, <&world_consonants_cedilla_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_consonants_cedilla_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp COMMA &kp LS(C)>; )
# 7246 "glove80.keymap"
    world_consonants_cedilla_upper: world_consonants_cedilla_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_consonants_cedilla_upper_macro>, <&world_consonants_cedilla_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_consonants_cedilla: world_consonants_cedilla {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_consonants_cedilla_lower>, <&world_consonants_cedilla_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_consonants_eszett_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp S &kp S>; )
# 7288 "glove80.keymap"
    world_consonants_eszett_lower: world_consonants_eszett_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_consonants_eszett_lower_macro>, <&world_consonants_eszett_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_consonants_eszett_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(S) &kp LS(S)>; )
# 7319 "glove80.keymap"
    world_consonants_eszett_upper: world_consonants_eszett_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_consonants_eszett_upper_macro>, <&world_consonants_eszett_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_consonants_eszett: world_consonants_eszett {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_consonants_eszett_lower>, <&world_consonants_eszett_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_consonants_ntilde_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(GRAVE) &kp N>; )
# 7361 "glove80.keymap"
    world_consonants_ntilde_lower: world_consonants_ntilde_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_consonants_ntilde_lower_macro>, <&world_consonants_ntilde_lower_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_consonants_ntilde_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp LS(GRAVE) &kp LS(N)>; )
# 7397 "glove80.keymap"
    world_consonants_ntilde_upper: world_consonants_ntilde_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_consonants_ntilde_upper_macro>, <&world_consonants_ntilde_upper_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    world_consonants_ntilde: world_consonants_ntilde {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_consonants_ntilde_lower>, <&world_consonants_ntilde_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_quotes_left_angle_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N0 &kp N3 &kp N9 &kp ENTER>; )
# 7424 "glove80.keymap"
    world_quotes_left_angle_lower: world_quotes_left_angle_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_angle_lower_macro>, <&world_quotes_left_angle_lower_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_quotes_left_angle_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp A &kp B &kp ENTER>; )
# 7445 "glove80.keymap"
    world_quotes_left_angle_upper: world_quotes_left_angle_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_angle_upper_macro>, <&world_quotes_left_angle_upper_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    world_quotes_left_angle: world_quotes_left_angle {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_angle_lower>, <&world_quotes_left_angle_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_quotes_left_curly_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N0 &kp N1 &kp N8 &kp ENTER>; )
# 7472 "glove80.keymap"
    world_quotes_left_curly_lower: world_quotes_left_curly_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_curly_lower_macro>, <&world_quotes_left_curly_lower_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_quotes_left_curly_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N0 &kp N1 &kp C &kp ENTER>; )
# 7493 "glove80.keymap"
    world_quotes_left_curly_upper: world_quotes_left_curly_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_curly_upper_macro>, <&world_quotes_left_curly_upper_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    world_quotes_left_curly: world_quotes_left_curly {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_curly_lower>, <&world_quotes_left_curly_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_quotes_left_low_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N0 &kp N1 &kp A &kp ENTER>; )
# 7520 "glove80.keymap"
    world_quotes_left_low_lower: world_quotes_left_low_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_low_lower_macro>, <&world_quotes_left_low_lower_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_quotes_left_low_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N0 &kp N1 &kp E &kp ENTER>; )
# 7541 "glove80.keymap"
    world_quotes_left_low_upper: world_quotes_left_low_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_low_upper_macro>, <&world_quotes_left_low_upper_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    world_quotes_left_low: world_quotes_left_low {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_low_lower>, <&world_quotes_left_low_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_quotes_left_corner1_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N3 &kp N0 &kp N0 &kp C &kp ENTER>; )
# 7568 "glove80.keymap"
    world_quotes_left_corner1_lower: world_quotes_left_corner1_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_corner1_lower_macro>, <&world_quotes_left_corner1_lower_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_quotes_left_corner1_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N4 &kp N1 &kp ENTER>; )
# 7589 "glove80.keymap"
    world_quotes_left_corner1_upper: world_quotes_left_corner1_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_corner1_upper_macro>, <&world_quotes_left_corner1_upper_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    world_quotes_left_corner1: world_quotes_left_corner1 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_corner1_lower>, <&world_quotes_left_corner1_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_quotes_left_corner2_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N3 &kp N0 &kp N0 &kp E &kp ENTER>; )
# 7616 "glove80.keymap"
    world_quotes_left_corner2_lower: world_quotes_left_corner2_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_corner2_lower_macro>, <&world_quotes_left_corner2_lower_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_quotes_left_corner2_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N4 &kp N3 &kp ENTER>; )
# 7637 "glove80.keymap"
    world_quotes_left_corner2_upper: world_quotes_left_corner2_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_corner2_upper_macro>, <&world_quotes_left_corner2_upper_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    world_quotes_left_corner2: world_quotes_left_corner2 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_corner2_lower>, <&world_quotes_left_corner2_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_quotes_left_grave_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N6 &kp N0 &kp ENTER>; )
# 7664 "glove80.keymap"
    world_quotes_left_grave: world_quotes_left_grave {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_grave_macro>, <&world_quotes_left_grave_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_quotes_right_angle_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N0 &kp N3 &kp A &kp ENTER>; )
# 7685 "glove80.keymap"
    world_quotes_right_angle_lower: world_quotes_right_angle_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_angle_lower_macro>, <&world_quotes_right_angle_lower_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_quotes_right_angle_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp B &kp B &kp ENTER>; )
# 7706 "glove80.keymap"
    world_quotes_right_angle_upper: world_quotes_right_angle_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_angle_upper_macro>, <&world_quotes_right_angle_upper_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    world_quotes_right_angle: world_quotes_right_angle {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_angle_lower>, <&world_quotes_right_angle_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_quotes_right_curly_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N0 &kp N1 &kp N9 &kp ENTER>; )
# 7733 "glove80.keymap"
    world_quotes_right_curly_lower: world_quotes_right_curly_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_curly_lower_macro>, <&world_quotes_right_curly_lower_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_quotes_right_curly_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N0 &kp N1 &kp D &kp ENTER>; )
# 7754 "glove80.keymap"
    world_quotes_right_curly_upper: world_quotes_right_curly_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_curly_upper_macro>, <&world_quotes_right_curly_upper_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    world_quotes_right_curly: world_quotes_right_curly {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_curly_lower>, <&world_quotes_right_curly_upper>;
        mods = <MOD_LSFT>;
    };
    world_quotes_right_low: world_quotes_right_low {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_low_lower>, <&world_quotes_left_low_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_quotes_right_corner1_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N3 &kp N0 &kp N0 &kp D &kp ENTER>; )
# 7787 "glove80.keymap"
    world_quotes_right_corner1_lower: world_quotes_right_corner1_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_corner1_lower_macro>, <&world_quotes_right_corner1_lower_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_quotes_right_corner1_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N4 &kp N2 &kp ENTER>; )
# 7808 "glove80.keymap"
    world_quotes_right_corner1_upper: world_quotes_right_corner1_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_corner1_upper_macro>, <&world_quotes_right_corner1_upper_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    world_quotes_right_corner1: world_quotes_right_corner1 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_corner1_lower>, <&world_quotes_right_corner1_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_quotes_right_corner2_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N3 &kp N0 &kp N0 &kp F &kp ENTER>; )
# 7835 "glove80.keymap"
    world_quotes_right_corner2_lower: world_quotes_right_corner2_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_corner2_lower_macro>, <&world_quotes_right_corner2_lower_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_quotes_right_corner2_upper_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N4 &kp N4 &kp ENTER>; )
# 7856 "glove80.keymap"
    world_quotes_right_corner2_upper: world_quotes_right_corner2_upper {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_corner2_upper_macro>, <&world_quotes_right_corner2_upper_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    world_quotes_right_corner2: world_quotes_right_corner2 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_corner2_lower>, <&world_quotes_right_corner2_upper>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_quotes_right_grave_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp B &kp N4 &kp ENTER>; )
# 7883 "glove80.keymap"
    world_quotes_right_grave: world_quotes_right_grave {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_grave_macro>, <&world_quotes_right_grave_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_currency_dollar_lower_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N4 &kp ENTER>; )
# 7904 "glove80.keymap"
    world_currency_dollar_lower: world_currency_dollar_lower {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_dollar_lower_macro>, <&world_currency_dollar_lower_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    world_currency_dollar: world_currency_dollar {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_dollar_lower>, <&world_currency_cent>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(world_currency_yen_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp A &kp N5 &kp ENTER>; )
# 7931 "glove80.keymap"
    world_currency_yen: world_currency_yen {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_yen_macro>, <&world_currency_yen_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_currency_euro_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp RALT &kp E &kp EQUAL>; )
# 7967 "glove80.keymap"
    world_currency_euro: world_currency_euro {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_euro_macro>, <&world_currency_euro_macro>;
        mods = <(~(

MOD_RALT



))>;
    };
    ZMK_MACRO(world_currency_won_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N0 &kp A &kp N9 &kp ENTER>; )
# 7988 "glove80.keymap"
    world_currency_won: world_currency_won {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_won_macro>, <&world_currency_won_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(world_currency_pound_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp A &kp N3 &kp ENTER>; )
# 8009 "glove80.keymap"
    world_currency_pound: world_currency_pound {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_pound_macro>, <&world_currency_pound_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    world_currency_generic: world_currency_generic {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_sign>, <&world_currency_crypto>;
        mods = <MOD_LSFT>;
    };




    world_i_base: world_i_base {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_acute>, <&world_i_LCTL>;
        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_i_LCTL: world_i_LCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_diaeresis>, <&world_i_RCTL>;
        mods = <(MOD_RCTL|MOD_RSFT)>;
    };
    world_i_RCTL: world_i_RCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_i_circumflex>, <&world_i_grave>;
        mods = <(MOD_RSFT)>;
    };
    world_e_base: world_e_base {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_acute>, <&world_e_RALT>;
        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_e_RALT: world_e_RALT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_ae>, <&world_e_LCTL>;
        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_e_LCTL: world_e_LCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_diaeresis>, <&world_e_RCTL>;
        mods = <(MOD_RCTL|MOD_RSFT)>;
    };
    world_e_RCTL: world_e_RCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_e_circumflex>, <&world_e_grave>;
        mods = <(MOD_RSFT)>;
    };
    world_a_base: world_a_base {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_acute>, <&world_a_LALT>;
        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_a_LALT: world_a_LALT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_tilde>, <&world_a_RALT>;
        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_a_RALT: world_a_RALT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_ring>, <&world_a_LCTL>;
        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_a_LCTL: world_a_LCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_diaeresis>, <&world_a_RCTL>;
        mods = <(MOD_RCTL|MOD_RSFT)>;
    };
    world_a_RCTL: world_a_RCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_a_circumflex>, <&world_a_grave>;
        mods = <(MOD_RSFT)>;
    };
    world_y_base: world_y_base {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_y_acute>, <&world_y_diaeresis>;
        mods = <(MOD_LCTL)>;
    };
    world_o_base: world_o_base {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_acute>, <&world_o_LALT>;
        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_o_LALT: world_o_LALT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_tilde>, <&world_o_RALT>;
        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_o_RALT: world_o_RALT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_slash>, <&world_o_LCTL>;
        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_o_LCTL: world_o_LCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_diaeresis>, <&world_o_RCTL>;
        mods = <(MOD_RCTL|MOD_RSFT)>;
    };
    world_o_RCTL: world_o_RCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_o_circumflex>, <&world_o_grave>;
        mods = <(MOD_RSFT)>;
    };
    world_u_base: world_u_base {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_acute>, <&world_u_LCTL>;
        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_u_LCTL: world_u_LCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_diaeresis>, <&world_u_RCTL>;
        mods = <(MOD_RCTL|MOD_RSFT)>;
    };
    world_u_RCTL: world_u_RCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_u_circumflex>, <&world_u_grave>;
        mods = <(MOD_RSFT)>;
    };
    world_consonants_base: world_consonants_base {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_consonants_cedilla>, <&world_consonants_LCTL>;
        mods = <(MOD_LCTL|MOD_RCTL)>;
    };
    world_consonants_LCTL: world_consonants_LCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_consonants_ntilde>, <&world_consonants_eszett>;
        mods = <(MOD_RCTL)>;
    };
    world_quotes_left_base: world_quotes_left_base {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_angle>, <&world_quotes_left_LALT>;
        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_quotes_left_LALT: world_quotes_left_LALT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_corner1>, <&world_quotes_left_RALT>;
        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_quotes_left_RALT: world_quotes_left_RALT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_corner2>, <&world_quotes_left_LCTL>;
        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_quotes_left_LCTL: world_quotes_left_LCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_curly>, <&world_quotes_left_RCTL>;
        mods = <(MOD_RCTL|MOD_RSFT)>;
    };
    world_quotes_left_RCTL: world_quotes_left_RCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_left_low>, <&world_quotes_left_grave>;
        mods = <(MOD_RSFT)>;
    };
    world_quotes_right_base: world_quotes_right_base {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_angle>, <&world_quotes_right_LALT>;
        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_quotes_right_LALT: world_quotes_right_LALT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_corner1>, <&world_quotes_right_RALT>;
        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_quotes_right_RALT: world_quotes_right_RALT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_corner2>, <&world_quotes_right_LCTL>;
        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_quotes_right_LCTL: world_quotes_right_LCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_curly>, <&world_quotes_right_RCTL>;
        mods = <(MOD_RCTL|MOD_RSFT)>;
    };
    world_quotes_right_RCTL: world_quotes_right_RCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_quotes_right_low>, <&world_quotes_right_grave>;
        mods = <(MOD_RSFT)>;
    };
    world_currency_base: world_currency_base {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_dollar>, <&world_currency_LALT>;
        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_currency_LALT: world_currency_LALT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_yen>, <&world_currency_RALT>;
        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_currency_RALT: world_currency_RALT {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_won>, <&world_currency_LCTL>;
        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
    };
    world_currency_LCTL: world_currency_LCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_euro>, <&world_currency_RCTL>;
        mods = <(MOD_RCTL|MOD_RSFT)>;
    };
    world_currency_RCTL: world_currency_RCTL {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&world_currency_pound>, <&world_currency_generic>;
        mods = <(MOD_RSFT)>;
    };
# 8308 "glove80.keymap"
    ZMK_MACRO(emoji_zwj_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N0 &kp N0 &kp D &kp ENTER>; )
# 8317 "glove80.keymap"
    emoji_zwj: emoji_zwj {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_zwj_macro>, <&emoji_zwj_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_male_sign_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N6 &kp N4 &kp N2 &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>; )
# 8338 "glove80.keymap"
    emoji_male_sign: emoji_male_sign {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_male_sign_macro>, <&emoji_male_sign_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_female_sign_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N6 &kp N4 &kp N0 &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>; )
# 8359 "glove80.keymap"
    emoji_female_sign: emoji_female_sign {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_female_sign_macro>, <&emoji_female_sign_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_right_arrow_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N7 &kp A &kp N1 &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>; )
# 8380 "glove80.keymap"
    emoji_right_arrow: emoji_right_arrow {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_right_arrow_macro>, <&emoji_right_arrow_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_left_arrow_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp B &kp N0 &kp N5 &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>; )
# 8401 "glove80.keymap"
    emoji_left_arrow: emoji_left_arrow {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_left_arrow_macro>, <&emoji_left_arrow_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_rainbow_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N0 &kp N8 &kp ENTER>; )
# 8422 "glove80.keymap"
    emoji_rainbow: emoji_rainbow {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_rainbow_macro>, <&emoji_rainbow_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_cloudy_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp N2 &kp N6 &kp N0 &kp N1 &kp ENTER>, <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>; )
# 8443 "glove80.keymap"
    emoji_cloudy: emoji_cloudy {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_cloudy_macro>, <&emoji_cloudy_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_mostly_cloudy_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N2 &kp N5 &kp ENTER>; )
# 8464 "glove80.keymap"
    emoji_mostly_cloudy: emoji_mostly_cloudy {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_mostly_cloudy_macro>, <&emoji_mostly_cloudy_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_partly_cloudy_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N6 &kp C &kp N5 &kp ENTER>; )
# 8485 "glove80.keymap"
    emoji_partly_cloudy: emoji_partly_cloudy {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_partly_cloudy_macro>, <&emoji_partly_cloudy_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_mostly_sunny_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N2 &kp N4 &kp ENTER>, <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>; )
# 8506 "glove80.keymap"
    emoji_mostly_sunny: emoji_mostly_sunny {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_mostly_sunny_macro>, <&emoji_mostly_sunny_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_sunny_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N6 &kp N0 &kp N0 &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>; )
# 8527 "glove80.keymap"
    emoji_sunny: emoji_sunny {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_sunny_macro>, <&emoji_sunny_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_sunrise_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N0 &kp N5 &kp ENTER>; )
# 8548 "glove80.keymap"
    emoji_sunrise: emoji_sunrise {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_sunrise_macro>, <&emoji_sunrise_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_sunrise_mountains_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N0 &kp N4 &kp ENTER>; )
# 8569 "glove80.keymap"
    emoji_sunrise_mountains: emoji_sunrise_mountains {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_sunrise_mountains_macro>, <&emoji_sunrise_mountains_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_cityscape_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp D &kp N9 &kp ENTER>, <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>; )
# 8590 "glove80.keymap"
    emoji_cityscape: emoji_cityscape {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_cityscape_macro>, <&emoji_cityscape_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_cityscape_dusk_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N0 &kp N7 &kp ENTER>; )
# 8611 "glove80.keymap"
    emoji_cityscape_dusk: emoji_cityscape_dusk {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_cityscape_dusk_macro>, <&emoji_cityscape_dusk_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_cityscape_night_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N0 &kp N3 &kp ENTER>; )
# 8632 "glove80.keymap"
    emoji_cityscape_night: emoji_cityscape_night {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_cityscape_night_macro>, <&emoji_cityscape_night_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_light_skin_tone_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp F &kp B &kp ENTER>; )
# 8653 "glove80.keymap"
    emoji_light_skin_tone: emoji_light_skin_tone {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_light_skin_tone_macro>, <&emoji_light_skin_tone_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_medium_light_skin_tone_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp F &kp C &kp ENTER>; )
# 8674 "glove80.keymap"
    emoji_medium_light_skin_tone: emoji_medium_light_skin_tone {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_medium_light_skin_tone_macro>, <&emoji_medium_light_skin_tone_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_medium_skin_tone_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp F &kp D &kp ENTER>; )
# 8695 "glove80.keymap"
    emoji_medium_skin_tone: emoji_medium_skin_tone {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_medium_skin_tone_macro>, <&emoji_medium_skin_tone_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_medium_dark_skin_tone_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp F &kp E &kp ENTER>; )
# 8716 "glove80.keymap"
    emoji_medium_dark_skin_tone: emoji_medium_dark_skin_tone {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_medium_dark_skin_tone_macro>, <&emoji_medium_dark_skin_tone_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_dark_skin_tone_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp F &kp F &kp ENTER>; )
# 8737 "glove80.keymap"
    emoji_dark_skin_tone: emoji_dark_skin_tone {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_dark_skin_tone_macro>, <&emoji_dark_skin_tone_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_baby_bottle_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N7 &kp C &kp ENTER>; )
# 8758 "glove80.keymap"
    emoji_baby_bottle: emoji_baby_bottle {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_baby_bottle_macro>, <&emoji_baby_bottle_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_baby_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N7 &kp N6 &kp ENTER>; )
# 8779 "glove80.keymap"
    emoji_baby: emoji_baby {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_baby_macro>, <&emoji_baby_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_boy_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N6 &kp N6 &kp ENTER>; )
# 8800 "glove80.keymap"
    emoji_boy: emoji_boy {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_boy_macro>, <&emoji_boy_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_girl_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N6 &kp N7 &kp ENTER>; )
# 8821 "glove80.keymap"
    emoji_girl: emoji_girl {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_girl_macro>, <&emoji_girl_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_man_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N6 &kp N8 &kp ENTER>; )
# 8842 "glove80.keymap"
    emoji_man: emoji_man {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_man_macro>, <&emoji_man_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_woman_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N6 &kp N9 &kp ENTER>; )
# 8863 "glove80.keymap"
    emoji_woman: emoji_woman {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_woman_macro>, <&emoji_woman_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_old_man_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N7 &kp N4 &kp ENTER>; )
# 8884 "glove80.keymap"
    emoji_old_man: emoji_old_man {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_old_man_macro>, <&emoji_old_man_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_old_woman_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N7 &kp N5 &kp ENTER>; )
# 8905 "glove80.keymap"
    emoji_old_woman: emoji_old_woman {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_old_woman_macro>, <&emoji_old_woman_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_white_hair_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp B &kp N3 &kp ENTER>; )
# 8926 "glove80.keymap"
    emoji_white_hair: emoji_white_hair {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_white_hair_macro>, <&emoji_white_hair_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_curly_hair_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp B &kp N1 &kp ENTER>; )
# 8947 "glove80.keymap"
    emoji_curly_hair: emoji_curly_hair {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_curly_hair_macro>, <&emoji_curly_hair_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_red_hair_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp B &kp N0 &kp ENTER>; )
# 8968 "glove80.keymap"
    emoji_red_hair: emoji_red_hair {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_red_hair_macro>, <&emoji_red_hair_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_bald_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp B &kp N2 &kp ENTER>; )
# 8989 "glove80.keymap"
    emoji_bald: emoji_bald {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_bald_macro>, <&emoji_bald_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_new_moon_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N1 &kp ENTER>; )
# 9010 "glove80.keymap"
    emoji_new_moon: emoji_new_moon {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_new_moon_macro>, <&emoji_new_moon_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_waxing_crescent_moon_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N2 &kp ENTER>; )
# 9031 "glove80.keymap"
    emoji_waxing_crescent_moon: emoji_waxing_crescent_moon {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_waxing_crescent_moon_macro>, <&emoji_waxing_crescent_moon_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_first_quarter_moon_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N3 &kp ENTER>; )
# 9052 "glove80.keymap"
    emoji_first_quarter_moon: emoji_first_quarter_moon {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_first_quarter_moon_macro>, <&emoji_first_quarter_moon_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_waxing_gibbous_moon_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N4 &kp ENTER>; )
# 9073 "glove80.keymap"
    emoji_waxing_gibbous_moon: emoji_waxing_gibbous_moon {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_waxing_gibbous_moon_macro>, <&emoji_waxing_gibbous_moon_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_full_moon_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N5 &kp ENTER>; )
# 9094 "glove80.keymap"
    emoji_full_moon: emoji_full_moon {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_full_moon_macro>, <&emoji_full_moon_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_waning_gibbous_moon_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N6 &kp ENTER>; )
# 9115 "glove80.keymap"
    emoji_waning_gibbous_moon: emoji_waning_gibbous_moon {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_waning_gibbous_moon_macro>, <&emoji_waning_gibbous_moon_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_last_quarter_moon_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N7 &kp ENTER>; )
# 9136 "glove80.keymap"
    emoji_last_quarter_moon: emoji_last_quarter_moon {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_last_quarter_moon_macro>, <&emoji_last_quarter_moon_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_waning_crescent_moon_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N1 &kp N8 &kp ENTER>; )
# 9157 "glove80.keymap"
    emoji_waning_crescent_moon: emoji_waning_crescent_moon {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_waning_crescent_moon_macro>, <&emoji_waning_crescent_moon_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_tada_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N3 &kp N8 &kp N9 &kp ENTER>; )
# 9178 "glove80.keymap"
    emoji_tada: emoji_tada {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_tada_macro>, <&emoji_tada_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_heart_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp N2 &kp N7 &kp N6 &kp N4 &kp ENTER>, <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>; )
# 9199 "glove80.keymap"
    emoji_heart: emoji_heart {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_heart_macro>, <&emoji_heart_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_fire_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N5 &kp N2 &kp N5 &kp ENTER>; )
# 9220 "glove80.keymap"
    emoji_fire: emoji_fire {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_fire_macro>, <&emoji_fire_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_muscle_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp A &kp A &kp ENTER>; )
# 9241 "glove80.keymap"
    emoji_muscle: emoji_muscle {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_muscle_macro>, <&emoji_muscle_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_person_climbing_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp D &kp N7 &kp ENTER>; )
# 9262 "glove80.keymap"
    emoji_person_climbing: emoji_person_climbing {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_person_climbing_macro>, <&emoji_person_climbing_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_lab_coat_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp N7 &kp C &kp ENTER>; )
# 9283 "glove80.keymap"
    emoji_lab_coat: emoji_lab_coat {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_lab_coat_macro>, <&emoji_lab_coat_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_rocket_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N8 &kp N0 &kp ENTER>; )
# 9304 "glove80.keymap"
    emoji_rocket: emoji_rocket {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_rocket_macro>, <&emoji_rocket_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_joy_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N0 &kp N2 &kp ENTER>; )
# 9325 "glove80.keymap"
    emoji_joy: emoji_joy {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_joy_macro>, <&emoji_joy_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_rofl_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp N2 &kp N3 &kp ENTER>; )
# 9346 "glove80.keymap"
    emoji_rofl: emoji_rofl {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_rofl_macro>, <&emoji_rofl_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_star_struck_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp N2 &kp N9 &kp ENTER>; )
# 9367 "glove80.keymap"
    emoji_star_struck: emoji_star_struck {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_star_struck_macro>, <&emoji_star_struck_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_love_struck_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N0 &kp D &kp ENTER>; )
# 9388 "glove80.keymap"
    emoji_love_struck: emoji_love_struck {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_love_struck_macro>, <&emoji_love_struck_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_saluting_face_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp A &kp E &kp N1 &kp ENTER>; )
# 9409 "glove80.keymap"
    emoji_saluting_face: emoji_saluting_face {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_saluting_face_macro>, <&emoji_saluting_face_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_shocked_face_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp N2 &kp F &kp ENTER>; )
# 9430 "glove80.keymap"
    emoji_shocked_face: emoji_shocked_face {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_shocked_face_macro>, <&emoji_shocked_face_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_cold_sweat_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N3 &kp N0 &kp ENTER>; )
# 9451 "glove80.keymap"
    emoji_cold_sweat: emoji_cold_sweat {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_cold_sweat_macro>, <&emoji_cold_sweat_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_monocle_face_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp D &kp N0 &kp ENTER>; )
# 9472 "glove80.keymap"
    emoji_monocle_face: emoji_monocle_face {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_monocle_face_macro>, <&emoji_monocle_face_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_snap_fingers_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp A &kp F &kp N0 &kp ENTER>; )
# 9493 "glove80.keymap"
    emoji_snap_fingers: emoji_snap_fingers {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_snap_fingers_macro>, <&emoji_snap_fingers_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_ok_hand_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N4 &kp C &kp ENTER>; )
# 9514 "glove80.keymap"
    emoji_ok_hand: emoji_ok_hand {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_ok_hand_macro>, <&emoji_ok_hand_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_pray_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp F &kp ENTER>; )
# 9535 "glove80.keymap"
    emoji_pray: emoji_pray {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_pray_macro>, <&emoji_pray_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_sweat_smile_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N0 &kp N5 &kp ENTER>; )
# 9556 "glove80.keymap"
    emoji_sweat_smile: emoji_sweat_smile {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_sweat_smile_macro>, <&emoji_sweat_smile_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_disappointed_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N1 &kp E &kp ENTER>; )
# 9577 "glove80.keymap"
    emoji_disappointed: emoji_disappointed {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_disappointed_macro>, <&emoji_disappointed_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_thinking_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp N1 &kp N4 &kp ENTER>; )
# 9598 "glove80.keymap"
    emoji_thinking: emoji_thinking {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_thinking_macro>, <&emoji_thinking_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_person_tipping_hand_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N8 &kp N1 &kp ENTER>; )
# 9619 "glove80.keymap"
    emoji_person_tipping_hand: emoji_person_tipping_hand {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_person_tipping_hand_macro>, <&emoji_person_tipping_hand_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_person_gesturing_ok_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp N6 &kp ENTER>; )
# 9640 "glove80.keymap"
    emoji_person_gesturing_ok: emoji_person_gesturing_ok {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_person_gesturing_ok_macro>, <&emoji_person_gesturing_ok_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_person_bowing_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp N7 &kp ENTER>; )
# 9661 "glove80.keymap"
    emoji_person_bowing: emoji_person_bowing {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_person_bowing_macro>, <&emoji_person_bowing_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_person_raising_hand_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp B &kp ENTER>; )
# 9682 "glove80.keymap"
    emoji_person_raising_hand: emoji_person_raising_hand {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_person_raising_hand_macro>, <&emoji_person_raising_hand_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_person_gesturing_no_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp N5 &kp ENTER>; )
# 9703 "glove80.keymap"
    emoji_person_gesturing_no: emoji_person_gesturing_no {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_person_gesturing_no_macro>, <&emoji_person_gesturing_no_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_person_shrugging_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp N3 &kp N7 &kp ENTER>; )
# 9724 "glove80.keymap"
    emoji_person_shrugging: emoji_person_shrugging {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_person_shrugging_macro>, <&emoji_person_shrugging_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_checkoff_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N7 &kp N0 &kp N5 &kp ENTER>; )
# 9745 "glove80.keymap"
    emoji_checkoff: emoji_checkoff {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_checkoff_macro>, <&emoji_checkoff_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_100_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp A &kp F &kp ENTER>; )
# 9766 "glove80.keymap"
    emoji_100: emoji_100 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_100_macro>, <&emoji_100_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_warning_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N6 &kp A &kp N0 &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>; )
# 9787 "glove80.keymap"
    emoji_warning: emoji_warning {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_warning_macro>, <&emoji_warning_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_x_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N7 &kp N4 &kp C &kp ENTER>; )
# 9808 "glove80.keymap"
    emoji_x: emoji_x {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_x_macro>, <&emoji_x_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_question_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N7 &kp N5 &kp N3 &kp ENTER>; )
# 9829 "glove80.keymap"
    emoji_question: emoji_question {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_question_macro>, <&emoji_question_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_astronaut_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp D &kp N1 &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp N2 &kp N0 &kp N0 &kp D &kp ENTER>, <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N8 &kp N0 &kp ENTER>; )
# 9850 "glove80.keymap"
    emoji_astronaut: emoji_astronaut {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_astronaut_macro>, <&emoji_astronaut_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_nerd_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N9 &kp N1 &kp N3 &kp ENTER>; )
# 9871 "glove80.keymap"
    emoji_nerd: emoji_nerd {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_nerd_macro>, <&emoji_nerd_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_sparkles_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N7 &kp N2 &kp N8 &kp ENTER>; )
# 9892 "glove80.keymap"
    emoji_sparkles: emoji_sparkles {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_sparkles_macro>, <&emoji_sparkles_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_raised_hands_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp C &kp ENTER>; )
# 9913 "glove80.keymap"
    emoji_raised_hands: emoji_raised_hands {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_raised_hands_macro>, <&emoji_raised_hands_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_point_up_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N2 &kp N6 &kp N1 &kp D &kp ENTER>, <&macro_wait_time 10>, <&macro_tap &kp LC(LS(U)) &kp F &kp E &kp N0 &kp F &kp ENTER>; )
# 9934 "glove80.keymap"
    emoji_point_up: emoji_point_up {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_point_up_macro>, <&emoji_point_up_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_thumbs_up_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N4 &kp D &kp ENTER>; )
# 9955 "glove80.keymap"
    emoji_thumbs_up: emoji_thumbs_up {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_thumbs_up_macro>, <&emoji_thumbs_up_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };




    emoji_moon_complete: emoji_moon_complete {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_new_moon>, <&emoji_full_moon>;
        mods = <MOD_LSFT>;
    };
    emoji_moon_gibbous: emoji_moon_gibbous {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_waning_gibbous_moon>, <&emoji_waxing_gibbous_moon>;
        mods = <MOD_LSFT>;
    };
    emoji_moon_quarter: emoji_moon_quarter {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_last_quarter_moon>, <&emoji_first_quarter_moon>;
        mods = <MOD_LSFT>;
    };
    emoji_moon_crescent: emoji_moon_crescent {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_waning_crescent_moon>, <&emoji_waxing_crescent_moon>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(emoji_moon_stars_magic_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp A &kp N8 &kp N4 &kp ENTER>; )
# 10004 "glove80.keymap"
    emoji_moon_stars_magic: emoji_moon_stars_magic {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_moon_stars_magic_macro>, <&emoji_moon_stars_magic_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    emoji_moon_stars: emoji_moon_stars {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_sparkles>, <&emoji_moon_stars_magic>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(emoji_face_smile_up_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp N2 &kp ENTER>; )
# 10031 "glove80.keymap"
    emoji_face_smile_up: emoji_face_smile_up {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_face_smile_up_macro>, <&emoji_face_smile_up_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_face_smile_down_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N4 &kp N3 &kp ENTER>; )
# 10052 "glove80.keymap"
    emoji_face_smile_down: emoji_face_smile_down {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_face_smile_down_macro>, <&emoji_face_smile_down_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    emoji_face_smile: emoji_face_smile {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_face_smile_up>, <&emoji_face_smile_down>;
        mods = <MOD_LSFT>;
    };
    emoji_face_laugh: emoji_face_laugh {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_joy>, <&emoji_rofl>;
        mods = <MOD_LSFT>;
    };
    emoji_face_eyes: emoji_face_eyes {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_star_struck>, <&emoji_love_struck>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(emoji_face_joke_wink_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N0 &kp N9 &kp ENTER>; )
# 10091 "glove80.keymap"
    emoji_face_joke_wink: emoji_face_joke_wink {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_face_joke_wink_macro>, <&emoji_face_joke_wink_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_face_joke_tounge_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N1 &kp C &kp ENTER>; )
# 10112 "glove80.keymap"
    emoji_face_joke_tounge: emoji_face_joke_tounge {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_face_joke_tounge_macro>, <&emoji_face_joke_tounge_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    emoji_face_joke: emoji_face_joke {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_face_joke_wink>, <&emoji_face_joke_tounge>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(emoji_face_fear_scared_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N2 &kp N8 &kp ENTER>; )
# 10139 "glove80.keymap"
    emoji_face_fear_scared: emoji_face_fear_scared {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_face_fear_scared_macro>, <&emoji_face_fear_scared_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    ZMK_MACRO(emoji_face_fear_scream_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N3 &kp N1 &kp ENTER>; )
# 10160 "glove80.keymap"
    emoji_face_fear_scream: emoji_face_fear_scream {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_face_fear_scream_macro>, <&emoji_face_fear_scream_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    emoji_face_fear: emoji_face_fear {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_face_fear_scared>, <&emoji_face_fear_scream>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(emoji_face_surprise_dizzy_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N3 &kp N5 &kp ENTER>; )
# 10187 "glove80.keymap"
    emoji_face_surprise_dizzy: emoji_face_surprise_dizzy {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_face_surprise_dizzy_macro>, <&emoji_face_surprise_dizzy_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    emoji_face_surprise: emoji_face_surprise {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_shocked_face>, <&emoji_face_surprise_dizzy>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(emoji_gesture_attention_wave_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N4 &kp B &kp ENTER>; )
# 10214 "glove80.keymap"
    emoji_gesture_attention_wave: emoji_gesture_attention_wave {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_gesture_attention_wave_macro>, <&emoji_gesture_attention_wave_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    emoji_gesture_attention: emoji_gesture_attention {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_snap_fingers>, <&emoji_gesture_attention_wave>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(emoji_gesture_approval_cool_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N0 &kp E &kp ENTER>; )
# 10241 "glove80.keymap"
    emoji_gesture_approval_cool: emoji_gesture_approval_cool {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_gesture_approval_cool_macro>, <&emoji_gesture_approval_cool_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    emoji_gesture_approval: emoji_gesture_approval {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_ok_hand>, <&emoji_gesture_approval_cool>;
        mods = <MOD_LSFT>;
    };
    emoji_gesture_gratitude: emoji_gesture_gratitude {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_pray>, <&emoji_saluting_face>;
        mods = <MOD_LSFT>;
    };
    emoji_gesture_anxiety: emoji_gesture_anxiety {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_sweat_smile>, <&emoji_cold_sweat>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(emoji_gesture_despair_cry_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N6 &kp N2 &kp N2 &kp ENTER>; )
# 10280 "glove80.keymap"
    emoji_gesture_despair_cry: emoji_gesture_despair_cry {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_gesture_despair_cry_macro>, <&emoji_gesture_despair_cry_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    emoji_gesture_despair: emoji_gesture_despair {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_disappointed>, <&emoji_gesture_despair_cry>;
        mods = <MOD_LSFT>;
    };
    emoji_gesture_curious: emoji_gesture_curious {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_thinking>, <&emoji_monocle_face>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(emoji_gesture_point_you_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp A &kp F &kp N5 &kp ENTER>; )
# 10313 "glove80.keymap"
    emoji_gesture_point_you: emoji_gesture_point_you {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_gesture_point_you_macro>, <&emoji_gesture_point_you_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    emoji_gesture_point: emoji_gesture_point {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_point_up>, <&emoji_gesture_point_you>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(emoji_gesture_thumbs_down_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N4 &kp E &kp ENTER>; )
# 10340 "glove80.keymap"
    emoji_gesture_thumbs_down: emoji_gesture_thumbs_down {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_gesture_thumbs_down_macro>, <&emoji_gesture_thumbs_down_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    emoji_gesture_thumbs: emoji_gesture_thumbs {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_thumbs_up>, <&emoji_gesture_thumbs_down>;
        mods = <MOD_LSFT>;
    };
    ZMK_MACRO(emoji_gesture_hands_clap_macro, wait-ms = <1>; tap-ms = <1>; bindings = <&macro_tap &kp LC(LS(U)) &kp N1 &kp F &kp N4 &kp N4 &kp F &kp ENTER>; )
# 10367 "glove80.keymap"
    emoji_gesture_hands_clap: emoji_gesture_hands_clap {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_gesture_hands_clap_macro>, <&emoji_gesture_hands_clap_macro>;
        mods = <(~(



(MOD_LCTL|MOD_LSFT)

))>;
    };
    emoji_gesture_hands: emoji_gesture_hands {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&emoji_raised_hands>, <&emoji_gesture_hands_clap>;
        mods = <MOD_LSFT>;
    };
};
        };

    emoji_gender_sign_preset: &none {};







    emoji_skin_tone_preset: &none {};
# 10410 "glove80.keymap"
    emoji_hair_style_preset: &none {};
# 10420 "glove80.keymap"
        /{
# 10501 "glove80.keymap"
        };
# 10542 "glove80.keymap"
        /{

};


/ {
    macros {

    };
};


/ {
    keymap {
        compatible = "zmk,keymap";


        layer_Engrammer {
            bindings = <
               &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
            &kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSLH
            &kp GRAVE &kp B &left_ring2_bilateral RALT Y &kp O &kp U &kp SQT &kp SEMI &kp L &kp D &right_ring2_bilateral RALT W &kp V &kp Z
           &caps_word &left_pinky_bilateral LGUI C &left_ring1_bilateral LALT I &left_middy_bilateral LCTL E &left_index_bilateral LSFT A &plain 9 COMMA &plain 9 DOT &right_index_bilateral LSFT H &right_middy_bilateral LCTL T &right_ring1_bilateral LALT S &right_pinky_bilateral LGUI N &kp Q
            &kp LSHFT &kp G &kp X &kp J &kp K &kp MINUS &thumb 22 ESC &kp UP &kp DOWN &kp LEFT &kp RIGHT &thumb 26 ENTER &kp FSLH &kp R &kp M &kp F &kp P &kp RSHFT
 &magic 31 0 &kp HOME &kp PG_UP &kp PG_DN &thumb 23 END &thumb 20 BACKSPACE &thumb 21 DELETE &thumb_lower_shift 30 LSFT &thumb_lower_shift 30 LSFT &thumb 25 TAB &space 24 SPACE &thumb_parang_left 27 0 &kp LBKT &kp RBKT &parang_right &magic 31 0
            >;
        };

        layer_Engram {
            bindings = <
               &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
             &kp LBKT &engram_N1 &engram_N2 &engram_N3 &engram_N4 &engram_N5 &engram_N6 &engram_N7 &engram_N8 &engram_N9 &engram_N0 &kp RBKT
           &engram_AT &kp B &left_ring2 RALT Y &kp O &kp U &engram_SQT &engram_DQT &kp L &kp D &right_ring2 RALT W &kp V &kp Z
           &caps_word &left_pinky LGUI C &left_ring1 LALT I &left_middy LCTL E &left_index LSFT A &plain_engram_COMMA 9 0 &plain_engram_DOT 9 0 &right_index LSFT H &right_middy LCTL T &right_ring1 LALT S &right_pinky LGUI N &kp Q
            &kp LSHFT &kp G &kp X &kp J &kp K &kp MINUS &thumb 22 ESC &kp UP &kp DOWN &kp LEFT &kp RIGHT &thumb 26 ENTER &engram_QMARK &kp R &kp M &kp F &kp P &kp RSHFT
 &magic 31 0 &kp HOME &kp PG_UP &kp PG_DN &thumb 23 END &thumb 20 BACKSPACE &thumb 21 DELETE &thumb_lower_shift 30 LSFT &thumb_lower_shift 30 LSFT &thumb 25 TAB &space 24 SPACE &thumb_parang_left 27 0 &engram_HASH &engram_FSLH &parang_right &magic 31 0
            >;
        };

        layer_Dvorak {
            bindings = <
               &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
            &kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSLH
            &kp GRAVE &kp SQT &left_ring2 RALT COMMA &kp DOT &kp P &kp Y &kp F &kp G &kp C &right_ring2 RALT R &kp L &kp SLASH
           &caps_word &left_pinky LGUI A &left_ring1 LALT O &left_middy LCTL E &left_index LSFT U &plain 9 I &plain 9 D &right_index LSFT H &right_middy LCTL T &right_ring1 LALT N &right_pinky LGUI S &kp MINUS
            &kp LSHFT &kp SEMI &kp Q &kp J &kp K &kp X &thumb 22 ESC &kp UP &kp DOWN &kp LEFT &kp RIGHT &thumb 26 ENTER &kp B &kp M &kp W &kp V &kp Z &kp RSHFT
 &magic 31 0 &kp HOME &kp PG_UP &kp PG_DN &thumb 23 END &thumb 20 BACKSPACE &thumb 21 DELETE &thumb_lower_shift 30 LSFT &thumb_lower_shift 30 LSFT &thumb 25 TAB &space 24 SPACE &thumb_parang_left 27 0 &kp LBKT &kp RBKT &parang_right &magic 31 0
            >;
        };

        layer_ColemakDHm {
            bindings = <
               &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
            &kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSLH
            &kp GRAVE &kp Q &left_ring2 RALT W &kp F &kp P &kp B &kp J &kp L &kp U &right_ring2 RALT Y &kp SEMI &kp MINUS
           &caps_word &left_pinky LGUI A &left_ring1 LALT R &left_middy LCTL S &left_index LSFT T &plain 9 G &plain 9 M &right_index LSFT N &right_middy LCTL E &right_ring1 LALT I &right_pinky LGUI O &kp SQT
            &kp LSHFT &kp Z &kp X &kp C &kp D &kp V &thumb 22 ESC &kp UP &kp DOWN &kp LEFT &kp RIGHT &thumb 26 ENTER &kp K &kp H &kp COMMA &kp DOT &kp FSLH &kp RSHFT
 &magic 31 0 &kp HOME &kp PG_UP &kp PG_DN &thumb 23 END &thumb 20 BACKSPACE &thumb 21 DELETE &thumb_lower_shift 30 LSFT &thumb_lower_shift 30 LSFT &thumb 25 TAB &space 24 SPACE &thumb_parang_left 27 0 &kp LBKT &kp RBKT &parang_right &magic 31 0
            >;
        };

        layer_Colemak {
            bindings = <
               &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
            &kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSLH
            &kp GRAVE &kp Q &left_ring2 RALT W &kp F &kp P &kp G &kp J &kp L &kp U &right_ring2 RALT Y &kp SEMI &kp MINUS
           &caps_word &left_pinky LGUI A &left_ring1 LALT R &left_middy LCTL S &left_index LSFT T &plain 9 D &plain 9 H &right_index LSFT N &right_middy LCTL E &right_ring1 LALT I &right_pinky LGUI O &kp SQT
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &thumb 22 ESC &kp UP &kp DOWN &kp LEFT &kp RIGHT &thumb 26 ENTER &kp K &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
 &magic 31 0 &kp HOME &kp PG_UP &kp PG_DN &thumb 23 END &thumb 20 BACKSPACE &thumb 21 DELETE &thumb_lower_shift 30 LSFT &thumb_lower_shift 30 LSFT &thumb 25 TAB &space 24 SPACE &thumb_parang_left 27 0 &kp LBKT &kp RBKT &parang_right &magic 31 0
            >;
        };

        layer_QWERTY {
            bindings = <
               &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
            &kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSLH
            &kp GRAVE &kp Q &left_ring2 RALT W &kp E &kp R &kp T &kp Y &kp U &kp I &right_ring2 RALT O &kp P &kp MINUS
           &caps_word &left_pinky LGUI A &left_ring1 LALT S &left_middy LCTL D &left_index LSFT F &plain 9 G &plain 9 H &right_index LSFT J &right_middy LCTL K &right_ring1 LALT L &right_pinky LGUI SEMI &kp SQT
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &thumb 22 ESC &kp UP &kp DOWN &kp LEFT &kp RIGHT &thumb 26 ENTER &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
 &magic 31 0 &kp HOME &kp PG_UP &kp PG_DN &thumb 23 END &thumb 20 BACKSPACE &thumb 21 DELETE &thumb_lower_shift 30 LSFT &thumb_lower_shift 30 LSFT &thumb 25 TAB &space 24 SPACE &thumb_parang_left 27 0 &kp LBKT &kp RBKT &parang_right &magic 31 0
            >;
        };

        layer_Norman {
            bindings = <
               &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
            &kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSLH
            &kp GRAVE &kp Q &left_ring2 RALT W &kp D &kp F &kp K &kp J &kp U &kp R &right_ring2 RALT L &kp SEMI &kp MINUS
           &caps_word &left_pinky LGUI A &left_ring1 LALT S &left_middy LCTL E &left_index LSFT T &plain 9 G &plain 9 Y &right_index LSFT N &right_middy LCTL I &right_ring1 LALT O &right_pinky LGUI H &kp SQT
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &thumb 22 ESC &kp UP &kp DOWN &kp LEFT &kp RIGHT &thumb 26 ENTER &kp P &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
 &magic 31 0 &kp HOME &kp PG_UP &kp PG_DN &thumb 23 END &thumb 20 BACKSPACE &thumb 21 DELETE &thumb_lower_shift 30 LSFT &thumb_lower_shift 30 LSFT &thumb 25 TAB &space 24 SPACE &thumb_parang_left 27 0 &kp LBKT &kp RBKT &parang_right &magic 31 0
            >;
        };

        layer_Workman {
            bindings = <
               &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
            &kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSLH
            &kp GRAVE &kp Q &left_ring2 RALT D &kp R &kp W &kp B &kp J &kp F &kp U &right_ring2 RALT P &kp SEMI &kp MINUS
           &caps_word &left_pinky LGUI A &left_ring1 LALT S &left_middy LCTL H &left_index LSFT T &plain 9 G &plain 9 Y &right_index LSFT N &right_middy LCTL E &right_ring1 LALT O &right_pinky LGUI I &kp SQT
            &kp LSHFT &kp Z &kp X &kp M &kp C &kp V &thumb 22 ESC &kp UP &kp DOWN &kp LEFT &kp RIGHT &thumb 26 ENTER &kp K &kp L &kp COMMA &kp DOT &kp FSLH &kp RSHFT
 &magic 31 0 &kp HOME &kp PG_UP &kp PG_DN &thumb 23 END &thumb 20 BACKSPACE &thumb 21 DELETE &thumb_lower_shift 30 LSFT &thumb_lower_shift 30 LSFT &thumb 25 TAB &space 24 SPACE &thumb_parang_left 27 0 &kp LBKT &kp RBKT &parang_right &magic 31 0
            >;
        };

        layer_Halmak {
            bindings = <
               &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
            &kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSLH
            &kp GRAVE &kp W &left_ring2 RALT L &kp R &kp B &kp Z &kp SEMI &kp Q &kp U &right_ring2 RALT D &kp J &kp MINUS
           &caps_word &left_pinky LGUI S &left_ring1 LALT H &left_middy LCTL N &left_index LSFT T &plain 9 COMMA &plain 9 DOT &right_index LSFT A &right_middy LCTL E &right_ring1 LALT O &right_pinky LGUI I &kp SQT
            &kp LSHFT &kp F &kp M &kp V &kp C &kp FSLH &thumb 22 ESC &kp UP &kp DOWN &kp LEFT &kp RIGHT &thumb 26 ENTER &kp G &kp P &kp X &kp K &kp Y &kp RSHFT
 &magic 31 0 &kp HOME &kp PG_UP &kp PG_DN &thumb 23 END &thumb 20 BACKSPACE &thumb 21 DELETE &thumb_lower_shift 30 LSFT &thumb_lower_shift 30 LSFT &thumb 25 TAB &space 24 SPACE &thumb_parang_left 27 0 &kp LBKT &kp RBKT &parang_right &magic 31 0
            >;
        };

        layer_Typing {
            bindings = <
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
 &trans &trans &kp Y &trans &trans &trans &trans &trans &trans &kp W &trans &trans
 &trans &kp C &kp I &kp E &kp A &kp COMMA &kp DOT &kp H &kp T &kp S &kp N &trans
 &trans &trans &trans &trans &trans &trans &kp ESC &trans &trans &trans &trans &kp ENTER &trans &trans &trans &trans &trans &trans
 &trans &trans &trans &trans &trans &kp BACKSPACE &kp DELETE &tog 9 &tog 9 &kp TAB &kp SPACE &trans &trans &trans &trans &trans
            >;
        };

        layer_LeftPinky {
            bindings = <
 &left_pinky_tap F1 &left_pinky_tap F2 &left_pinky_tap F3 &left_pinky_tap F4 &left_pinky_tap F5 &trans &trans &trans &trans &trans
 &left_pinky_tap EQUAL &left_pinky_tap N1 &left_pinky_tap N2 &left_pinky_tap N3 &left_pinky_tap N4 &left_pinky_tap N5 &trans &trans &trans &trans &trans &trans
 &left_pinky_tap GRAVE &left_pinky_tap B &left_pinky_ring2_bilateral RALT Y &left_pinky_tap O &left_pinky_tap U &left_pinky_tap SQT &trans &trans &trans &kp W &trans &trans
 &left_pinky_tap 0 &none &left_pinky_ring1_bilateral LALT I &left_pinky_middy_bilateral LCTL E &left_pinky_index_bilateral LSFT A &left_pinky_tap COMMA &kp DOT &kp H &kp T &kp S &kp N &trans
 &left_pinky_tap LSHFT &left_pinky_tap G &left_pinky_tap X &left_pinky_tap J &left_pinky_tap K &left_pinky_tap MINUS &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                      &trans &left_pinky_tap HOME &left_pinky_tap PG_UP &left_pinky_tap PG_DN &left_pinky_tap END &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };

        layer_LeftRing1 {
            bindings = <
 &left_ring1_tap F1 &left_ring1_tap F2 &left_ring1_tap F3 &left_ring1_tap F4 &left_ring1_tap F5 &trans &trans &trans &trans &trans
 &left_ring1_tap EQUAL &left_ring1_tap N1 &left_ring1_tap N2 &left_ring1_tap N3 &left_ring1_tap N4 &left_ring1_tap N5 &trans &trans &trans &trans &trans &trans
 &left_ring1_tap GRAVE &left_ring1_tap B &left_ring1_ring2_bilateral RALT Y &left_ring1_tap O &left_ring1_tap U &left_ring1_tap SQT &trans &trans &trans &kp W &trans &trans
 &left_ring1_tap 0 &left_ring1_pinky_bilateral LGUI C &none &left_ring1_middy_bilateral LCTL E &left_ring1_index_bilateral LSFT A &left_ring1_tap COMMA &kp DOT &kp H &kp T &kp S &kp N &trans
 &left_ring1_tap LSHFT &left_ring1_tap G &left_ring1_tap X &left_ring1_tap J &left_ring1_tap K &left_ring1_tap MINUS &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                      &trans &left_ring1_tap HOME &left_ring1_tap PG_UP &left_ring1_tap PG_DN &left_ring1_tap END &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };

        layer_LeftRing2 {
            bindings = <
 &left_ring2_tap F1 &left_ring2_tap F2 &left_ring2_tap F3 &left_ring2_tap F4 &left_ring2_tap F5 &trans &trans &trans &trans &trans
 &left_ring2_tap EQUAL &left_ring2_tap N1 &left_ring2_tap N2 &left_ring2_tap N3 &left_ring2_tap N4 &left_ring2_tap N5 &trans &trans &trans &trans &trans &trans
 &left_ring2_tap GRAVE &left_ring2_tap B &none &left_ring2_tap O &left_ring2_tap U &left_ring2_tap SQT &trans &trans &trans &kp W &trans &trans
 &left_ring2_tap 0 &left_ring2_pinky_bilateral LGUI C &left_ring2_ring1_bilateral LALT I &left_ring2_middy_bilateral LCTL E &left_ring2_index_bilateral LSFT A &left_ring2_tap COMMA &kp DOT &kp H &kp T &kp S &kp N &trans
 &left_ring2_tap LSHFT &left_ring2_tap G &left_ring2_tap X &left_ring2_tap J &left_ring2_tap K &left_ring2_tap MINUS &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                      &trans &left_ring2_tap HOME &left_ring2_tap PG_UP &left_ring2_tap PG_DN &left_ring2_tap END &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };

        layer_LeftMiddy {
            bindings = <
 &left_middy_tap F1 &left_middy_tap F2 &left_middy_tap F3 &left_middy_tap F4 &left_middy_tap F5 &trans &trans &trans &trans &trans
 &left_middy_tap EQUAL &left_middy_tap N1 &left_middy_tap N2 &left_middy_tap N3 &left_middy_tap N4 &left_middy_tap N5 &trans &trans &trans &trans &trans &trans
 &left_middy_tap GRAVE &left_middy_tap B &left_middy_ring2_bilateral RALT Y &left_middy_tap O &left_middy_tap U &left_middy_tap SQT &trans &trans &trans &kp W &trans &trans
 &left_middy_tap 0 &left_middy_pinky_bilateral LGUI C &left_middy_ring1_bilateral LALT I &none &left_middy_index_bilateral LSFT A &left_middy_tap COMMA &kp DOT &kp H &kp T &kp S &kp N &trans
 &left_middy_tap LSHFT &left_middy_tap G &left_middy_tap X &left_middy_tap J &left_middy_tap K &left_middy_tap MINUS &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                      &trans &left_middy_tap HOME &left_middy_tap PG_UP &left_middy_tap PG_DN &left_middy_tap END &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };

        layer_LeftIndex {
            bindings = <
 &left_index_tap F1 &left_index_tap F2 &left_index_tap F3 &left_index_tap F4 &left_index_tap F5 &trans &trans &trans &trans &trans
 &left_index_tap EQUAL &left_index_tap N1 &left_index_tap N2 &left_index_tap N3 &left_index_tap N4 &left_index_tap N5 &trans &trans &trans &trans &trans &trans
 &left_index_tap GRAVE &left_index_tap B &left_index_ring2_bilateral RALT Y &left_index_tap O &left_index_tap U &left_index_tap SQT &trans &trans &trans &kp W &trans &trans
 &left_index_tap 0 &left_index_pinky_bilateral LGUI C &left_index_ring1_bilateral LALT I &left_index_middy_bilateral LCTL E &none &left_index_tap COMMA &kp DOT &kp H &kp T &kp S &kp N &trans
 &left_index_tap LSHFT &left_index_tap G &left_index_tap X &left_index_tap J &left_index_tap K &left_index_tap MINUS &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                      &trans &left_index_tap HOME &left_index_tap PG_UP &left_index_tap PG_DN &left_index_tap END &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };

        layer_RightPinky {
            bindings = <
 &trans &trans &trans &trans &trans &right_pinky_tap F6 &right_pinky_tap F7 &right_pinky_tap F8 &right_pinky_tap F9 &right_pinky_tap F10
 &trans &trans &trans &trans &trans &trans &right_pinky_tap N6 &right_pinky_tap N7 &right_pinky_tap N8 &right_pinky_tap N9 &right_pinky_tap N0 &right_pinky_tap BSLH
 &trans &trans &kp Y &trans &trans &trans &right_pinky_tap SEMI &right_pinky_tap L &right_pinky_tap D &right_pinky_ring2_bilateral RALT W &right_pinky_tap V &right_pinky_tap Z
 &trans &kp C &kp I &kp E &kp A &kp COMMA &right_pinky_tap DOT &right_pinky_index_bilateral LSFT H &right_pinky_middy_bilateral LCTL T &right_pinky_ring1_bilateral LALT S &none &right_pinky_tap Q
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &right_pinky_tap FSLH &right_pinky_tap R &right_pinky_tap M &right_pinky_tap F &right_pinky_tap P &right_pinky_tap RSHFT
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &right_pinky_tap LS(N9) &right_pinky_tap LBKT &right_pinky_tap RBKT &right_pinky_tap LS(N0) &trans
            >;
        };

        layer_RightRing1 {
            bindings = <
 &trans &trans &trans &trans &trans &right_ring1_tap F6 &right_ring1_tap F7 &right_ring1_tap F8 &right_ring1_tap F9 &right_ring1_tap F10
 &trans &trans &trans &trans &trans &trans &right_ring1_tap N6 &right_ring1_tap N7 &right_ring1_tap N8 &right_ring1_tap N9 &right_ring1_tap N0 &right_ring1_tap BSLH
 &trans &trans &kp Y &trans &trans &trans &right_ring1_tap SEMI &right_ring1_tap L &right_ring1_tap D &right_ring1_ring2_bilateral RALT W &right_ring1_tap V &right_ring1_tap Z
 &trans &kp C &kp I &kp E &kp A &kp COMMA &right_ring1_tap DOT &right_ring1_index_bilateral LSFT H &right_ring1_middy_bilateral LCTL T &none &right_ring1_pinky_bilateral LGUI N &right_ring1_tap Q
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &right_ring1_tap FSLH &right_ring1_tap R &right_ring1_tap M &right_ring1_tap F &right_ring1_tap P &right_ring1_tap RSHFT
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &right_ring1_tap LS(N9) &right_ring1_tap LBKT &right_ring1_tap RBKT &right_ring1_tap LS(N0) &trans
            >;
        };

        layer_RightRing2 {
            bindings = <
 &trans &trans &trans &trans &trans &right_ring2_tap F6 &right_ring2_tap F7 &right_ring2_tap F8 &right_ring2_tap F9 &right_ring2_tap F10
 &trans &trans &trans &trans &trans &trans &right_ring2_tap N6 &right_ring2_tap N7 &right_ring2_tap N8 &right_ring2_tap N9 &right_ring2_tap N0 &right_ring2_tap BSLH
 &trans &trans &kp Y &trans &trans &trans &right_ring2_tap SEMI &right_ring2_tap L &right_ring2_tap D &none &right_ring2_tap V &right_ring2_tap Z
 &trans &kp C &kp I &kp E &kp A &kp COMMA &right_ring2_tap DOT &right_ring2_index_bilateral LSFT H &right_ring2_middy_bilateral LCTL T &right_ring2_ring1_bilateral LALT S &right_ring2_pinky_bilateral LGUI N &right_ring2_tap Q
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &right_ring2_tap FSLH &right_ring2_tap R &right_ring2_tap M &right_ring2_tap F &right_ring2_tap P &right_ring2_tap RSHFT
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &right_ring2_tap LS(N9) &right_ring2_tap LBKT &right_ring2_tap RBKT &right_ring2_tap LS(N0) &trans
            >;
        };

        layer_RightMiddy {
            bindings = <
 &trans &trans &trans &trans &trans &right_middy_tap F6 &right_middy_tap F7 &right_middy_tap F8 &right_middy_tap F9 &right_middy_tap F10
 &trans &trans &trans &trans &trans &trans &right_middy_tap N6 &right_middy_tap N7 &right_middy_tap N8 &right_middy_tap N9 &right_middy_tap N0 &right_middy_tap BSLH
 &trans &trans &kp Y &trans &trans &trans &right_middy_tap SEMI &right_middy_tap L &right_middy_tap D &right_middy_ring2_bilateral RALT W &right_middy_tap V &right_middy_tap Z
 &trans &kp C &kp I &kp E &kp A &kp COMMA &right_middy_tap DOT &right_middy_index_bilateral LSFT H &none &right_middy_ring1_bilateral LALT S &right_middy_pinky_bilateral LGUI N &right_middy_tap Q
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &right_middy_tap FSLH &right_middy_tap R &right_middy_tap M &right_middy_tap F &right_middy_tap P &right_middy_tap RSHFT
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &right_middy_tap LS(N9) &right_middy_tap LBKT &right_middy_tap RBKT &right_middy_tap LS(N0) &trans
            >;
        };

        layer_RightIndex {
            bindings = <
 &trans &trans &trans &trans &trans &right_index_tap F6 &right_index_tap F7 &right_index_tap F8 &right_index_tap F9 &right_index_tap F10
 &trans &trans &trans &trans &trans &trans &right_index_tap N6 &right_index_tap N7 &right_index_tap N8 &right_index_tap N9 &right_index_tap N0 &right_index_tap BSLH
 &trans &trans &kp Y &trans &trans &trans &right_index_tap SEMI &right_index_tap L &right_index_tap D &right_index_ring2_bilateral RALT W &right_index_tap V &right_index_tap Z
 &trans &kp C &kp I &kp E &kp A &kp COMMA &right_index_tap DOT &none &right_index_middy_bilateral LCTL T &right_index_ring1_bilateral LALT S &right_index_pinky_bilateral LGUI N &right_index_tap Q
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &right_index_tap FSLH &right_index_tap R &right_index_tap M &right_index_tap F &right_index_tap P &right_index_tap RSHFT
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &right_index_tap LS(N9) &right_index_tap LBKT &right_index_tap RBKT &right_index_tap LS(N0) &trans
            >;
        };

        layer_Cursor {
            bindings = <
     &none &none &none &none &none &none &none &none &none &none
   &kp ESC &kp RET &kp SPACE &kp TAB &kp DEL &kp INS &kp INS &kp DEL &kp TAB &kp SPACE &kp RET &kp ESC
 &kp LC(K) &sk LSHFT &kp LC(Y) &kp LC(Z) &kp BSPC &kp LC(X) &kp LC(X) &kp BSPC &kp LC(Z) &kp LC(Y) &sk LSHFT &kp LC(K)
 &kp LC(L) &kp LGUI &kp LALT &kp LCTL &kp LSFT &kp LC(C) &kp LC(C) &kp LEFT &kp UP &kp DOWN &kp RIGHT &kp LC(L)
 &kp LC(J) &kp LC(A) &select_line &select_word &kp LC(F) &kp LC(V) &mod_tab LALT &mod_tab LGUI &kp TAB &select_none &extend_line &extend_word &kp LC(V) &kp HOME &kp PG_UP &kp PG_DN &kp END &kp LC(J)
 &kp LC(H) &kp LC(LS(G)) &extend_line &extend_word &kp LC(G) &none &mod_tab LCTL &tog 20 &kp LC(A) &select_line &select_word &kp LC(F) &kp LC(LS(G)) &kp LC(G) &kp LC(H) &kp LG(DOT)
            >;
        };

        layer_Number {
            bindings = <
      &none &none &none &none &none &none &none &none &none &none
    &kp ESC &kp RET &kp SPACE &kp TAB &kp DEL &kp INS &kp LS(N6) &kp LS(N4) &kp LS(N3) &kp LS(N2) &kp LS(N1) &kp LS(BSLH)
      &none &sk LSHFT &kp LC(Y) &kp LC(Z) &kp BSPC &kp A &kp LS(N5) &kp N7 &kp N8 &kp N9 &kp LS(SEMI) &kp K
 &kp KP_NUM &kp LGUI &kp LALT &kp LCTL &kp LSFT &kp B &kp LS(EQUAL) &kp N4 &kp N5 &kp N6 &kp MINUS &kp J
      &none &kp LC(A) &select_line &select_word &kp LS(MINUS) &kp C &kp D &kp E &kp F &kp LS(COMMA) &kp LS(DOT) &kp EQUAL &kp ASTERISK &kp N1 &kp N2 &kp N3 &kp SLASH &kp LS(G)
      &none &none &extend_line &extend_word &kp X &none &none &tog 21 &kp COMMA &kp DOT &kp N0 &trans &trans &trans &trans &kp LS(GRAVE)
            >;
        };

        layer_Function {
            bindings = <
    &none &none &none &none &none &none &none &none &none &none
  &kp ESC &kp RET &kp SPACE &kp TAB &kp DEL &kp INS &kp C_MEDIA_HOME &kp C_PLAY &kp C_PREV &kp C_NEXT &kp C_STOP &kp C_EJECT
    &none &sk LSHFT &kp LC(Y) &kp LC(Z) &kp BSPC &none &kp K_WWW &kp F7 &kp F8 &kp F9 &kp F10 &kp F13
 &kp CAPS &kp LGUI &kp LALT &kp LCTL &kp LSFT &none &kp K_CALC &kp F4 &kp F5 &kp F6 &kp F11 &kp F14
    &none &kp LC(A) &select_line &select_word &none &none &none &none &none &kp C_PREV &kp C_NEXT &kp C_PP &kp C_AL_FILES &kp F1 &kp F2 &kp F3 &kp F12 &kp F15
    &none &none &extend_line &extend_word &none &none &none &tog 22 &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_BRI_MAX &kp C_BRI_UP &kp C_BRI_DN &kp C_BRI_MIN &kp C_BRI_AUTO
            >;
        };

        layer_Emoji {
            bindings = <
            &emoji_cloudy &emoji_mostly_cloudy &emoji_partly_cloudy &emoji_mostly_sunny &emoji_sunny &emoji_new_moon &emoji_moon_crescent &emoji_moon_quarter &emoji_moon_gibbous &emoji_full_moon
          &emoji_rainbow &emoji_light_skin_tone &emoji_medium_light_skin_tone &emoji_medium_skin_tone &emoji_medium_dark_skin_tone &emoji_dark_skin_tone &emoji_tada &emoji_heart &emoji_fire &emoji_muscle &emoji_person_climbing &emoji_lab_coat
        &emoji_left_arrow &emoji_bald &emoji_red_hair &emoji_curly_hair &emoji_white_hair &emoji_right_arrow &emoji_face_laugh &emoji_face_smile &emoji_face_eyes &emoji_face_joke &emoji_face_fear &emoji_face_surprise
       &emoji_female_sign &emoji_skin_tone_preset &emoji_zwj &emoji_gender_sign_preset &emoji_hair_style_preset &emoji_male_sign &emoji_gesture_attention &emoji_gesture_approval &emoji_gesture_gratitude &emoji_gesture_anxiety &emoji_gesture_despair &emoji_gesture_curious
         &emoji_old_woman &emoji_woman &emoji_girl &emoji_boy &emoji_man &emoji_old_man &emoji_cityscape &emoji_cityscape_dusk &emoji_cityscape_night &emoji_astronaut &emoji_rocket &emoji_moon_stars &emoji_person_tipping_hand &emoji_person_gesturing_ok &emoji_person_bowing &emoji_person_raising_hand &emoji_person_gesturing_no &emoji_person_shrugging
 &emoji_sunrise_mountains &emoji_sunrise &emoji_baby &emoji_baby_bottle &none &kp LSHFT &none &tog 23 &emoji_gesture_hands &emoji_gesture_point &emoji_gesture_thumbs &emoji_checkoff &emoji_100 &emoji_warning &emoji_x &emoji_question
            >;
        };

        layer_Symbol {
            bindings = <
     &none &none &none &none &none &none &none &none &none &none
     &none &kp GRAVE &kp LS(N9) &kp LS(N0) &kp SEMI &kp COMMA &none &none &none &none &none &none
  &kp LS(N1) &kp LS(LBKT) &kp SQT &kp LS(SQT) &kp LS(RBKT) &kp LS(FSLH) &kp SEMI &kp LSFT &kp LCTL &kp LALT &kp LGUI &none
  &kp LS(N3) &kp LS(N6) &kp EQUAL &kp LS(MINUS) &kp LS(N4) &kp LS(N8) &kp DOT &kp BSPC &kp TAB &kp SPACE &kp RET &none
    &kp LS(N2) &kp LS(COMMA) &kp LS(BSLH) &kp MINUS &kp LS(DOT) &kp FSLH &kp BSLH &kp DOT &kp LS(N8) &none &none &none &kp FSLH &kp DEL &kp LS(TAB) &none &none &none
 &kp LS(GRAVE) &kp LS(N7) &kp LBKT &kp RBKT &kp LS(EQUAL) &kp LS(N5) &kp LS(SEMI) &kp SEMI &tog 24 &none &none &trans &trans &trans &trans &none
            >;
        };

        layer_Mouse {
            bindings = <
  &none &none &none &none &none &none &none &none &none &none
  &none &none &none &none &none &none &none &none &none &none &none &none
  &none &none &none &none &none &none &none &kp LSFT &kp LCTL &kp LALT &kp LGUI &none
  &none &none &none &none &none &none &none &none &none &none &none &none
  &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none
  &none &none &none &none &none &none &none &none &tog 25 &none &none &none &none &none &none &none
            >;
        };

        layer_System {
            bindings = <
           &none &none &none &none &none &none &none &none &none &none
           &none &none &none &none &none &none &none &none &none &none &none &none
           &none &none &rgb_ug RGB_HUD &rgb_ug RGB_HUI &none &none &rgb_ug RGB_SAI &kp LSFT &kp LCTL &kp LALT &kp LGUI &rgb_ug RGB_SAD
 &rgb_ug RGB_TOG &rgb_ug RGB_EFR &rgb_ug RGB_BRD &rgb_ug RGB_BRI &rgb_ug RGB_EFF &kp K_APP &rgb_ug RGB_HUI &kp K_APP &kp K_LOCK &kp C_SLEEP &kp C_POWER &rgb_ug RGB_HUD
           &none &rgb_ug RGB_SPD &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_SPI &none &kp K_LOCK &kp C_SLEEP &kp C_POWER &none &none &none &rgb_ug RGB_SPI &rgb_ug RGB_TOG &kp PSCRN &kp SLCK &kp PAUSE_BREAK &rgb_ug RGB_SPD
           &none &none &none &none &none &kp PSCRN &kp SLCK &kp PAUSE_BREAK &tog 26 &none &linux_magic_sysrq &rgb_ug RGB_EFF &rgb_ug RGB_BRI &rgb_ug RGB_BRD &rgb_ug RGB_EFR &none
            >;
        };

        layer_World {
            bindings = <
                &none &none &none &none &none &none &none &none &none &none
                &none &none &none &none &none &none &none &none &none &none &none &none
                &none &world_degree_sign &world_y_base &world_o_base &world_u_base &none &none &none &kp LALT &kp RALT &none &none
                &none &world_consonants_base &world_i_base &world_e_base &world_a_base &none &none &kp LSHFT &kp LCTRL &kp RCTRL &kp RSHFT &none
 &world_currency_base &world_quotes_left_base &world_exclaim_left &world_question_left &world_quotes_right_base &none &none &none &none &none &none &none &none &none &none &none &none &none
    &world_micro_sign &world_section_sign &world_paragraph_sign &world_o_ordinal &world_a_ordinal &none &none &tog 27 &tog 27 &none &none &none &none &none &none &none
            >;
        };

        layer_Gaming {
            bindings = <
    &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
    &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
 &kp MINUS &kp GRAVE &kp B &kp N &kp M &kp SQT &kp B &kp N &kp M &kp COMMA &kp DOT &kp FSLH
     &kp T &kp TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P
     &kp G &kp LSHFT &kp A &kp S &kp D &kp F &kp ESC &kp RET &kp PAUSE_BREAK &kp BSPC &kp DEL &trans &kp G &kp H &kp J &kp K &kp L &kp SEMI
     &kp V &kp LCTRL &kp Z &kp X &kp C &kp SPACE &kp LALT &kp LGUI &tog 28 &trans &trans &trans &trans &trans &trans &trans
            >;
        };

        layer_Factory {
            bindings = <
               &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
            &kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS
              &kp TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp BSLH
              &kp ESC &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI &kp SQT
            &kp GRAVE &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LCTRL &lower &kp LGUI &kp RCTRL &kp RSHFT &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp PG_UP
 &magic 31 0 &kp HOME &kp END &kp LEFT &kp RIGHT &kp BSPC &kp DEL &kp LALT &kp RALT &kp RET &kp SPACE &kp UP &kp DOWN &kp LBKT &kp RBKT &kp PG_DN
            >;
        };

        layer_Lower {
            bindings = <
         &kp C_BRI_DN &kp C_BRI_UP &kp C_PREV &kp C_NEXT &kp C_PP &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &none &kp PAUSE_BREAK
            &kp EQUAL &none &none &none &none &kp HOME &kp LS(N9) &kp KP_NUM &kp KP_EQUAL &kp KP_SLASH &kp KP_MULTIPLY &kp PRINTSCREEN
              &kp TAB &none &none &kp UP_ARROW &none &kp END &kp LS(N0) &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS &kp SCROLLLOCK
              &kp ESC &none &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp PG_UP &kp PERCENT &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS &kp KP_NUM
            &kp GRAVE &kp K_APP &none &kp F11 &kp F12 &kp PG_DN &tog 22 &tog 9 &tog 28 &tog 28 &tog 9 &tog 26 &kp COMMA &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_ENTER &kp LALT
 &magic 31 0 &kp CAPS &kp INS &kp F11 &tog 23 &tog 20 &tog 21 &tog 30 &tog 30 &tog 25 &tog 24 &tog 27 &kp KP_N0 &kp KP_DOT &kp KP_ENTER &magic 31 0
            >;
        };

        layer_Magic {
            bindings = <
  &bt BT_CLR &none &none &none &none &none &none &none &none &bt BT_CLR_ALL
       &to 0 &to 1 &to 2 &to 3 &to 4 &to 5 &to 6 &to 7 &to 8 &none &none &none
       &none &rgb_ug RGB_SPI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG &none &none &none &none &none &none
 &bootloader &rgb_ug RGB_SPD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF &none &none &none &none &none &bootloader
  &sys_reset &none &none &none &none &none &bt_2 &bt_3 &tog 29 &none &none &none &none &none &none &none &none &sys_reset
       &none &none &none &none &none &bt_0 &bt_1 &out OUT_USB &none &none &none &none &none &none &none &none
            >;
        };

    };
};
